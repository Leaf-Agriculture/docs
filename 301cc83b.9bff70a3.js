(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{156:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=a.a.createContext({}),c=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},b=function(e){var t=c(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),b=c(n),f=i,h=b["".concat(l,".").concat(f)]||b[f]||p[f]||r;return n?a.a.createElement(h,d(d({ref:t},o),{},{components:n})):a.a.createElement(h,d({ref:t},o))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=f;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:i,l[1]=d;for(var o=2;o<r;o++)l[o]=n[o];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return c}));var i=n(2),a=n(6),r=(n(0),n(156)),l={title:"List of Events",description:"Alerts - Events",sidebar_label:"List of Events"},d={unversionedId:"alerts_events",id:"alerts_events",isDocsHomePage:!1,title:"List of Events",description:"Alerts - Events",source:"@site/docs/alerts_events.md",permalink:"/docs/docs/alerts_events",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/alerts_events.md",sidebar_label:"List of Events",sidebar:"docs",previous:{title:"Alerts Endpoints",permalink:"/docs/docs/alerts_endpoints"},next:{title:"Authentication Alerts",permalink:"/docs/docs/alerts_authentication"}},s=[{value:"About",id:"about",children:[]},{value:"Alert Events",id:"alert-events",children:[{value:"Webhook registered",id:"webhook-registered",children:[]}]},{value:"Credentials Alerts",id:"credentials-alerts",children:[{value:"Credentials Missing Permission",id:"credentials-missing-permission",children:[]},{value:"Credentials Unauthenticated",id:"credentials-unauthenticated",children:[]}]},{value:"Field Events",id:"field-events",children:[{value:"New Field",id:"new-field",children:[]},{value:"Field Updated",id:"field-updated",children:[]},{value:"New Merged Field",id:"new-merged-field",children:[]},{value:"Merged Field updated",id:"merged-field-updated",children:[]}]},{value:"Field Boundary Events",id:"field-boundary-events",children:[{value:"Field Boundary Created",id:"field-boundary-created",children:[]},{value:"Field Boundary Updated",id:"field-boundary-updated",children:[]}]},{value:"Manual File Upload Events",id:"manual-file-upload-events",children:[{value:"Batch Upload Processing Finished",id:"batch-upload-processing-finished",children:[]},{value:"Uploaded File Processing Finished",id:"uploaded-file-processing-finished",children:[]},{value:"Uploaded File Processing Failed",id:"uploaded-file-processing-failed",children:[]}]},{value:"Machine File Conversion Events",id:"machine-file-conversion-events",children:[{value:"Provider File Processing Finished",id:"provider-file-processing-finished",children:[]},{value:"Provider File Processing Failed",id:"provider-file-processing-failed",children:[]}]},{value:"Operation Events",id:"operation-events",children:[{value:"Merged File Processing Finished",id:"merged-file-processing-finished",children:[]},{value:"Merged File Processing Failed",id:"merged-file-processing-failed",children:[]},{value:"Automerged File Processing Finished",id:"automerged-file-processing-finished",children:[]},{value:"Automerged File Processing Failed",id:"automerged-file-processing-failed",children:[]},{value:"Operation created",id:"operation-created",children:[]},{value:"Operation updated",id:"operation-updated",children:[]},{value:"Operation Processing Finished",id:"operation-processing-finished",children:[]}]},{value:"Crop Monitoring Events",id:"crop-monitoring-events",children:[{value:"New Satellite Image",id:"new-satellite-image",children:[]},{value:"Satellite Subscription Failed",id:"satellite-subscription-failed",children:[]}]},{value:"Irrigation Events",id:"irrigation-events",children:[{value:"New Irrigation activity",id:"new-irrigation-activity",children:[]},{value:"New Field Irrigation activity",id:"new-field-irrigation-activity",children:[]}]},{value:"Assets (Beta) Events",id:"assets-beta-events",children:[{value:"New Machine",id:"new-machine",children:[]},{value:"Updated Machine",id:"updated-machine",children:[]},{value:"Deleted Machine",id:"deleted-machine",children:[]},{value:"New Implement",id:"new-implement",children:[]},{value:"Updated Implement",id:"updated-implement",children:[]}]}],o={rightToc:s};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"about"},"About"),Object(r.b)("p",null,"This section describes all types of events generated by Leaf and their respective formats. The types of events are grouped by the services that produce it. Below is a summary:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(i.a)({parentName:"tr"},{align:null}),"Service"),Object(r.b)("th",Object(i.a)({parentName:"tr"},{align:null}),"Available Events"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#alert-events"}),"Alert Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Webhook registered")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#credentials-alerts"}),"Credentials Alerts")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Credentials missing permission, credentials unauthenticated")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#field-events"}),"Field Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"New field, Field updated, New Merged Field, Merged field updated")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#field-boundary-events"}),"Field Boundary Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Field boundary created, field boundary updated")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#manual-file-upload-events"}),"Manual File Upload Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Batch Upload Processing Finished, uploaded file processing finished, uploaded file processing failed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#manual-file-conversion-events"}),"Machine File Conversion Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Provider file processing finished, provider file processing failed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#operation-events"}),"Operation Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Merged file processing finished, merged file processing failed, automerged file processing finished, automerged file processing failed, operation created, operation updated, operation processing finished.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#crop-monitoring-events"}),"Crop Monitoring Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"New satellite image, Satellite Subscription Failed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#irrigation-events"}),"Irrigation Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"New Irrigation activity, New Field Irrigation activity")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(i.a)({parentName:"td"},{href:"#assets-beta-events"}),"Assets (Beta) Events")),Object(r.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"New machine, deleted machine, updated machine, new implement, updated implement")))),Object(r.b)("h2",{id:"alert-events"},"Alert Events"),Object(r.b)("h3",{id:"webhook-registered"},"Webhook registered"),Object(r.b)("p",null,"When a new webhook is registered you will receive a one time success message in the below format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "message": "confirmation of webhook upon registration"\n}\n')),Object(r.b)("h2",{id:"credentials-alerts"},"Credentials Alerts"),Object(r.b)("h3",{id:"credentials-missing-permission"},"Credentials Missing Permission"),Object(r.b)("p",null,"Event for when the provided credentials don't have enough permissions to do the actions you are trying to."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "credential": "the client identification",\n  "provider": "the provider from the credential",\n  "credentialId": "the credential id",\n  "message": "message from the alert",\n  "status": "the new status of the credential",\n  "type": "credentialsLimitedPermission",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(r.b)("h3",{id:"credentials-unauthenticated"},"Credentials Unauthenticated"),Object(r.b)("p",null,"Event for when the credentials are no longer valid."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "credential": "the client identification",\n  "provider": "the provider from the credential",\n  "credentialId": "the credential id",\n  "message": "message from the alert",\n  "status": "the new status of the credential",\n  "type": "credentialsUnauthenticated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(r.b)("h2",{id:"field-events"},"Field Events"),Object(r.b)("h3",{id:"new-field"},"New Field"),Object(r.b)("p",null,"Event for when a new field is created either in a connected provider account or directly within Leaf. "),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "source": "SYNC",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the id of the created field",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "fieldCreated"\n}\n')),Object(r.b)("h3",{id:"field-updated"},"Field Updated"),Object(r.b)("p",null,"Event triggered when a field is updated. "),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "source": "SYNC",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the id of the updated field",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "fieldUpdated"\n}\n')),Object(r.b)("h3",{id:"new-merged-field"},"New Merged Field"),Object(r.b)("p",null,"Event for when a new merged field is created. The creation of a merged field depends of the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/configurations_overview#fieldsautosync"}),"fieldsAutoSync")," and ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/configurations_overview#fieldsmergeintersection"}),"fieldsMergeIntersection")," configurations."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "source": "REST",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the id of the created field",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "mergedFieldCreated"\n}\n')),Object(r.b)("h3",{id:"merged-field-updated"},"Merged Field updated"),Object(r.b)("p",null,"Event for when a merged field is updated due to the geometry update of one of the fields used to create the merged field."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "source": "REST",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the id of the created field",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "mergedFieldUpdated"\n}\n')),Object(r.b)("h2",{id:"field-boundary-events"},"Field Boundary Events"),Object(r.b)("h3",{id:"field-boundary-created"},"Field Boundary Created"),Object(r.b)("p",null,"Event for when a fieldBoundary is created."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "boundaryId": "the id of the created field boundary",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the field related to the created field boundary",\n  "type": "fieldBoundaryCreated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(r.b)("h3",{id:"field-boundary-updated"},"Field Boundary Updated"),Object(r.b)("p",null,"Event for when a fieldBoundary is updated."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "boundaryId": "the id of the updated field boundary",\n  "leafUserId": "the id of the file owner",\n  "fieldId": "the field related to the updated field boundary",\n  "type": "fieldBoundaryUpdated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(r.b)("h2",{id:"manual-file-upload-events"},"Manual File Upload Events"),Object(r.b)("h3",{id:"batch-upload-processing-finished"},"Batch Upload Processing Finished"),Object(r.b)("p",null,"Event triggered when all machine files identified in the batch file have been processed (converted or failed).\nThe files generated by the conversion will be listed in the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/converters_endpoints#get-batch-upload"}),"batch")," or ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/converters_endpoints#batch-files-status"}),"batch status")," endpoints using the ",Object(r.b)("inlineCode",{parentName:"p"},"batchId")," from the alert."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "batchId": "the id of the batchId",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "batchUploadProcessingFinished"\n}\n')),Object(r.b)("h3",{id:"uploaded-file-processing-finished"},"Uploaded File Processing Finished"),Object(r.b)("p",null,"Event for when all steps of the processing of a machine operations file that was uploaded\nto Leaf are finished. This event can be useful to trigger a procedure that fetches the file from the API.\nThis event can be used to activate a procedure that fetches the file from the api,\nsince processing the file may take some time."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "uploadedFileProcessingFinished"\n}\n')),Object(r.b)("h3",{id:"uploaded-file-processing-failed"},"Uploaded File Processing Failed"),Object(r.b)("p",null,"Event for when the processing of an operations file that was uploaded to Leaf is finished\nbut failed in one or more of the processing steps. This event can be useful for identifying\nfiles that have failed and are no longer being processed."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "message": "details of what happened. May be empty",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "uploadedFileProcessingFailed"\n}\n')),Object(r.b)("h2",{id:"machine-file-conversion-events"},"Machine File Conversion Events"),Object(r.b)("h3",{id:"provider-file-processing-finished"},"Provider File Processing Finished"),Object(r.b)("p",null,"Event for when the processing of an operations file from a provider\n(either uploaded to provider manually or via Wireless Data Transfer) has successfully finished\nprocessing. This event can be useful for identifying new files when they are available."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "providerFileProcessingFinished"\n}\n')),Object(r.b)("h3",{id:"provider-file-processing-failed"},"Provider File Processing Failed"),Object(r.b)("p",null,"Event for when the processing of an operations file from a provider\n(either uploaded to provider manually or via Wireless Data Transfer) is finished\nprocessing but failed in one or more of the processing steps. This event can be useful for identifying\nfiles that have failed and are no longer being processed."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "message": "details of what happened. May be empty",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "providerFileProcessingFailed"\n}\n')),Object(r.b)("h2",{id:"operation-events"},"Operation Events"),Object(r.b)("h3",{id:"merged-file-processing-finished"},"Merged File Processing Finished"),Object(r.b)("p",null,"Event for when the processing of a merged operation file has successfully finished\nprocessing. This event can be useful for identifying new merged files when they are available."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "mergedFileProcessingFinished"\n}\n')),Object(r.b)("h3",{id:"merged-file-processing-failed"},"Merged File Processing Failed"),Object(r.b)("p",null,"Event for when the processing of a merged operation file is finished\nprocessing but failed in one or more of the processing steps. This event can be useful for identifying\nmerged files that have failed and are no longer being processed."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "message": "details of what happened. May be empty",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "mergedFileProcessingFailed"\n}\n')),Object(r.b)("h3",{id:"automerged-file-processing-finished"},"Automerged File Processing Finished"),Object(r.b)("p",null,"Event for when the processing of an automerged operation file has successfully finished\nprocessing. This event can be useful for identifying new automerged files when they are available."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "automergedFileProcessingFinished"\n}\n')),Object(r.b)("h3",{id:"automerged-file-processing-failed"},"Automerged File Processing Failed"),Object(r.b)("p",null,"Event for when the processing of an automerged operation file is finished\nprocessing but failed in one or more of the processing steps. This event can be useful for identifying\nautomerged files that have failed and are no longer being processed."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileId": "the id of the uploaded file",\n  "leafUserId": "the id of the file owner",\n  "message": "details of what happened. May be empty",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "automergedFileProcessingFailed"\n}\n')),Object(r.b)("h3",{id:"operation-created"},"Operation created"),Object(r.b)("p",null,"Event for when an operation is successfully created.\nThis event can be useful for identifying new operations when they are available.\nWhen sending this event, operation resources such as summary, images and units will probably not be complete."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationId": "the id of the operation created",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "operationCreated"\n}\n')),Object(r.b)("h3",{id:"operation-updated"},"Operation updated"),Object(r.b)("p",null,"Event for when an operation has updated.\nThis event can be useful for identifying changes to operations."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationId": "the id of the operation uploaded",\n  "leafUserId": "the id of the file owner",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n  "type": "operationUpdated"\n}\n')),Object(r.b)("h3",{id:"operation-processing-finished"},"Operation Processing Finished"),Object(r.b)("p",null,"Event when a Field Operation has successfully finished.\nThis event could be useful for fetching the resources of an operation such as images, summary and units."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationId": "the id of the operation uploaded",\n  "leafUserId": "the id of the file owner",\n  "type": "operationProcessingFinished",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(r.b)("h2",{id:"crop-monitoring-events"},"Crop Monitoring Events"),Object(r.b)("h3",{id:"new-satellite-image"},"New Satellite Image"),Object(r.b)("p",null,"This event happens when we finish processing a new satellite image for a monitored field.\nIt can be useful for searching only the new and latest images available in our API."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "externalId": "the external id of the monitored field",\n  "processId": "the id of the process containing new images",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "type": "newSatelliteImage"\n}\n')),Object(r.b)("h3",{id:"satellite-subscription-failed"},"Satellite Subscription Failed"),Object(r.b)("p",null,"This event will be triggered whenever there is a failure in the field subscription on the provider side, usually unmapped failures."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fieldId": "the external id of the monitored field",\n  "message": "error message",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "type": "satelliteSubscriptionFailed"\n}\n')),Object(r.b)("h2",{id:"irrigation-events"},"Irrigation Events"),Object(r.b)("h3",{id:"new-irrigation-activity"},"New Irrigation activity"),Object(r.b)("p",null,"This event happens when a new as-applied irrigation data is available from the supported providers."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "irrigationId": "The ID of the as-applied irrigation activity",\n  "leafUserId": "the leaf user id",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "type": "newIrrigationActivity"\n}\n')),Object(r.b)("h3",{id:"new-field-irrigation-activity"},"New Field Irrigation activity"),Object(r.b)("p",null,"This event happens when a new irrigation data is available for a field."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fieldIrrigationId": "The ID of the irrigation activity for the given field",\n  "fieldId": "the field boundary ID",\n  "leafUserId": "the leaf user id",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "type": "newFieldIrrigationActivity"\n}\n')),Object(r.b)("h2",{id:"assets-beta-events"},"Assets (Beta) Events"),Object(r.b)("h3",{id:"new-machine"},"New Machine"),Object(r.b)("p",null,"This event happens when a new machine is created, either from operations files, or from provider data sync, or created by the user."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "machineCreated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "machineId": "the id of the new machine",\n  "leafUserId": "the id of the file owner"\n}\n')),Object(r.b)("h3",{id:"updated-machine"},"Updated Machine"),Object(r.b)("p",null,"This event happens when a machine is updated, either from operations files, or from provider data sync, or by the user."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "machineUpdated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "machineId": "the id of the machine uploaded",\n  "leafUserId": "the id of the file owner"\n}\n')),Object(r.b)("h3",{id:"deleted-machine"},"Deleted Machine"),Object(r.b)("p",null,"This event happens when a machine is deleted by the user."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "machineDeleted",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "machineId": "the id of the machine deleted",\n  "leafUserId": "the id of the file owner"\n}\n')),Object(r.b)("h3",{id:"new-implement"},"New Implement"),Object(r.b)("p",null,"This event happens when a new implement is created from provider data sync."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "implementCreated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "implementId": "the id of the new implement",\n  "leafUserId": "the id of the leaf user owner"\n}\n')),Object(r.b)("h3",{id:"updated-implement"},"Updated Implement"),Object(r.b)("p",null,"This event happens when a implement is updated from provider data sync."),Object(r.b)("p",null,"Alerts for this event are in the following format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "implementUpdated",\n  "timestamp": "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'",\n  "implementId": "the id of the implement uploaded",\n  "leafUserId": "the id of the leaf user owner"\n}\n')))}c.isMDXComponent=!0}}]);