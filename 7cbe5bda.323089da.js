(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{107:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return i})),a.d(e,"metadata",(function(){return O})),a.d(e,"rightToc",(function(){return j})),a.d(e,"default",(function(){return d}));var n=a(2),l=a(6),b=(a(0),a(156)),r=a(163),c=a(164),i=(a(159),{title:"Machine File Conversion Sample Responses",description:"Machine File Conversion - Sample Responses",sidebar_label:"Sample Responses"}),O={unversionedId:"machine_file_conversion_sample_output",id:"machine_file_conversion_sample_output",isDocsHomePage:!1,title:"Machine File Conversion Sample Responses",description:"Machine File Conversion - Sample Responses",source:"@site/docs/machine_file_conversion_sample_output.md",permalink:"/docs/docs/machine_file_conversion_sample_output",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/machine_file_conversion_sample_output.md",sidebar_label:"Sample Responses",sidebar:"docs",previous:{title:"Machine File Conversion Endpoints",permalink:"/docs/docs/machine_file_conversion_endpoints"},next:{title:"Units of Measurement and Properties",permalink:"/docs/docs/machine_file_conversion_units"}},j=[{value:"Overview",id:"overview",children:[]},{value:"Machine Files",id:"machine-files",children:[{value:"Machine File Sample",id:"machine-file-sample",children:[]},{value:"Properties by Operation Type",id:"properties-by-operation-type",children:[]}]},{value:"Standard Geojson",id:"standard-geojson",children:[{value:"Summary Response Sample",id:"summary-response-sample",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Valid points",id:"valid-points",children:[]},{value:"Images",id:"images",children:[]},{value:"Machine Files Units",id:"machine-files-units",children:[]}]}],p={rightToc:j};function d(t){var e=t.components,a=Object(l.a)(t,["components"]);return Object(b.b)("wrapper",Object(n.a)({},p,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"overview"},"Overview"),Object(b.b)("p",null,"This page shows and describes sample responses from Leaf's API, along with a list\nof what properties you can expect for each type of data."),Object(b.b)("h2",{id:"machine-files"},"Machine Files"),Object(b.b)("p",null,"Leaf returns operation file in a standardized format. Summaries use\nthe point data to derive basic information about the operation and include links\nto the original files and images of an operation. Naturally, different\ntypes of operations contain different properties. For instance, an ",Object(b.b)("inlineCode",{parentName:"p"},"applied"),"\noperation will contain ",Object(b.b)("inlineCode",{parentName:"p"},"appliedRate"),", whereas a ",Object(b.b)("inlineCode",{parentName:"p"},"harvested")," operation will\ncontain ",Object(b.b)("inlineCode",{parentName:"p"},"wetMass")," and other Yield properties. The resource below shows a typical return. A list of\nall properties is available here."),Object(b.b)("p",null,"A list of the properties as well as a sample summary response for an operation\nfile is included below."),Object(b.b)("p",null,"An operation returned by Leaf can be an individual file or contain multiple\nindividual files (uploaded, merged or uploaded).\nIf the operation contains more than one individual file, another key is added to\nthe resource, the ",Object(b.b)("inlineCode",{parentName:"p"},'"sources"')," key, that is a list of individual file ids.\nIf the operation was created by an upload on the ",Object(b.b)("inlineCode",{parentName:"p"},"/batch")," endpoint, the ",Object(b.b)("inlineCode",{parentName:"p"},'"batchId"'),"\nkey will be added to the resource with the corresponding uuid."),Object(b.b)("h3",{id:"machine-file-sample"},"Machine File Sample"),Object(b.b)("p",null,"You can move through the four tabs below to see a sample of how Leaf returns\neach of the operation types."),Object(b.b)(r.a,{defaultValue:"harvested",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "planted" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n"id": "69811426-ce0a-4280-a2b5-f3ca145e6fcb",\n"provider": "providerName",\n"fields": [\n  "97f19b7c-45bd-40c5-b2c5-efd1d3764ab3"\n],\n"fileFormat": "AGDATA",\n"fileName": "testFile.zip",\n"originalFile": "url",\n"downloadOriginalFile": "url",\n"rawGeojson": "url",\n"downloadRawGeojson": "url",\n"standardGeojson": "url",\n"downloadStandardGeojson": "url",\n"leafUserId": "f7f8062d-00db-4d76-9eff-51f43b82db56",\n"apiOwnerUsername": "test",\n"summary": {\n  "type": "Feature",\n  "properties": {\n    "elevation": {\n      "avg": 142.0509225092251,\n      "min": 141.9,\n      "max": 142.2,\n      "unit": "ft"\n    },\n    "singulation": {\n      "avg": 99.62031826568266,\n      "min": 99.48125,\n      "max": 99.75625,\n      "unit": "prcnt"\n    },\n    "totalPlanted": {\n      "value": 46974,\n      "unit": "seeds"\n    },\n    "seedRate": {\n      "avg": 32889.931431458586,\n      "min": 31960,\n      "max": 46135.3125,\n      "unit": "seeds/ac"\n    },\n    "speed": {\n      "avg": 3.913169741697417,\n      "min": 0.058,\n      "max": 4.258,\n      "unit": "mi/hr"\n    },\n    "downForce": {\n      "avg": 67.79335793357933,\n      "min": 2,\n      "max": 114,\n      "unit": "lbf"\n    },\n    "totalFuelUsed": {\n      "value": 196.25137347639,\n      "unit": "gal"\n    },\n    "originalOperationType": "SowingAndPlanting",\n    "varieties": [\n      {\n        "name": "variety",\n        "rate": {\n          "avg": 32889.931431458586,\n          "min": 31960,\n          "max": 46135.3125,\n          "unit": "seeds/ac",\n          "minTarget": 32000,\n          "maxTarget": 33000,\n          "avgTarget": 32890.78912254861\n        },\n        "area": {\n          "value": 5779.886574350697,\n          "unit": "m2"\n        },\n        "totalPlanted": {\n          "value": 46974,\n          "unit": "seeds"\n        }\n      }\n    ],\n    "originalOperationData": {\n      "originalOperationType": "SowingAndPlanting"\n    },\n    "startTime": "2015-05-02T20:02:28.64Z",\n    "operationType": "planted",\n    "endTime": "2015-05-02T20:09:32.64Z",\n    "totalDistance": {\n      "value": 1555.3545326263538,\n      "unit": "ft"\n    },\n    "crop": [\n      "corn"\n    ],\n    "totalArea": {\n      "value": 5779.886574350697,\n      "unit": "m2"\n    },\n    "machinery": [\n      {\n        "name": "Challenger 745 Tractor",\n        "type": "machine",\n        "serialNumber": "8220203",\n        "brand": "Challenger"\n      },\n      {\n        "name": "Kinze 40.0\' 16 Row Planter",\n        "type": "implement",\n        "brand": "Kinze"\n      }\n    ]\n  },\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [[[\n      [-89.80434894561768,40.47791686563837],\n      [-89.80756759643555,40.4757623387113],\n      [-89.80746030807495,40.47302011353734],\n      [-89.80475664138794,40.47070219301965],\n      [-89.80080842971802,40.47068586935202],\n      [-89.79797601699828,40.472709973879255],\n      [-89.7978687286377,40.47569704893722],\n      [-89.80117321014404,40.47808008455794],\n      [-89.80434894561768,40.47791686563837]\n    ]]]\n  }\n}\n}\n'))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for an "applied" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "b4d1832c-c479-4dbd-bc28-1ba792b8ca33",\n  "provider": "providerName",\n  "fields": [\n    "ebdb032c-b3a9-4116-9837-602abc23d4a0"\n  ],\n  "fileFormat": "SHAPEFILE",\n  "fileName": "testFile.zip",\n  "originalFile": "url",\n  "downloadOriginalFile": "url",\n  "rawGeojson": "url",\n  "downloadRawGeojson": "url",\n  "standardGeojson": "url",\n  "downloadStandardGeojson": "url",\n  "leafUserId": "e0088b35-4dec-49ea-9c52-d4a2b25d2932",\n  "apiOwnerUsername": "test",\n  "summary": {\n    "type": "Feature",\n    "properties": {\n      "elevation": {\n        "avg": 254.0579030350808,\n        "min": 244.1,\n        "max": 263.5,\n        "unit": "ft"\n      },\n      "operationDescription": "Pre-Emerge",\n      "speed": {\n        "avg": 10.122365727685876,\n        "min": 1.817995548248291,\n        "max": 12.682278633117676,\n        "unit": "mi/hr"\n      },\n      "tankMix": true,\n      "products": [\n        {\n          "name": "Fastac EC",\n          "type": "Component",\n          "rate": {\n            "unit": "floz/ac",\n            "value": 3.4\n          },\n          "totalApplied": {\n            "value": 75.40670095882788,\n            "unit": "floz"\n          },\n          "area": {\n            "value": 89753.32726801735,\n            "unit": "m2"\n          }\n        },\n        {\n          "name": "Water",\n          "type": "Carrier",\n          "rate": {\n            "unit": "gal/ac",\n            "value": 15\n          },\n          "totalApplied": {\n            "value": 332.67662187718184,\n            "unit": "gal"\n          },\n          "area": {\n            "value": 89753.32726801735,\n            "unit": "m2"\n          }\n        }\n      ],\n      "originalOperationType": "CropProtection",\n      "totalApplied": {\n        "value": 224.45693246637688,\n        "unit": "gal"\n      },\n      "appliedRate": {\n        "avg": 14.233637596564106,\n        "min": 0.2672675063127537,\n        "max": 66.08990634889587,\n        "unit": "gal/ac"\n      },\n      "originalOperationData": {\n        "originalOperationType": "CropProtection"\n      },\n      "startTime": "2017-04-22T18:31:23.105Z",\n      "operationType": "applied",\n      "endTime": "2017-04-22T18:46:08.308Z",\n      "totalDistance": {\n        "value": 7532.9296062434005,\n        "unit": "ft"\n      },\n      "crop": [],\n      "totalArea": {\n        "value": 63817.03945545471,\n        "unit": "m2"\n      },\n      "totalFuelUsed": {\n        "value": 196.25137347639,\n        "unit": "gal"\n      },\n      "machinery": [\n        {\n          "name": "John Deere R Series R4030",\n          "type": "machine",\n          "serialNumber": "10071690",\n          "brand": "John Deere"\n        },\n        {\n          "name": "Sprayer",\n          "type": "implement",\n          "brand": "unknown"\n        }\n      ]\n    },\n    "geometry": {\n      "type": "MultiPolygon",\n      "coordinates": [[[\n        [-89.80434894561768,40.47791686563837],\n        [-89.80756759643555,40.4757623387113],\n        [-89.80746030807495,40.47302011353734],\n        [-89.80475664138794,40.47070219301965],\n        [-89.80080842971802,40.47068586935202],\n        [-89.79797601699828,40.472709973879255],\n        [-89.7978687286377,40.47569704893722],\n        [-89.80117321014404,40.47808008455794],\n        [-89.80434894561768,40.47791686563837]\n      ]]]\n    }\n}\n}\n'))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "harvested" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "7b525b72-a8e7-4d34-80bb-9ea2dde87a09",\n  "provider": "providerName",\n  "fields": [\n    "696b5df6-e401-4d13-bafe-3d2689723254"\n  ],\n  "fileFormat": "CN1",\n  "fileName": "testFile.zip",\n  "originalFile": "url",\n  "downloadOriginalFile": "url",\n  "rawGeojson": "url",\n  "downloadRawGeojson": "url",\n  "standardGeojson": "url",\n  "downloadStandardGeojson": "url",\n  "leafUserId": "286eeb50-8e85-4e33-9f2d-1b9dcf0e56d7",\n  "apiOwnerUsername": "test",\n  "summary": {\n    "type": "Feature",\n    "properties": {\n      "totalDryMass": {\n        "value": 69707.74072725822,\n        "unit": "lb"\n      },\n      "dryVolume": {\n        "avg": 0.10060462979191162,\n        "min": 0.0006342037622996388,\n        "max": 0.19444628348991,\n        "unit": "bu"\n      },\n      "totalDryVolume": {\n        "value": 1244.7810844153173,\n        "unit": "bu"\n      },\n      "wetMassPerArea": {\n        "avg": 11752.315810068158,\n        "min": 87.79542055062868,\n        "max": 40340.87999553387,\n        "unit": "lb/ac"\n      },\n      "speed": {\n        "avg": 4.926574796479164,\n        "min": 2.430000066757202,\n        "max": 6.389999866485596,\n        "unit": "mi/hr"\n      },\n      "totalWetVolume": {\n        "value": 1294.538978069886,\n        "unit": "bu"\n      },\n      "originalOperationType": "Harvesting",\n      "startTime": "2015-09-23T00:00:00Z",\n      "totalDistance": {\n        "value": 17978.417202127104,\n        "unit": "ft"\n      },\n      "wetMass": {\n        "avg": 5.859062698772619,\n        "min": 0.03795335565182652,\n        "max": 11.06340317250743,\n        "unit": "lb"\n      },\n      "elevation": {\n        "avg": 155.78382768932352,\n        "min": 147.6,\n        "max": 162.4,\n        "unit": "ft"\n      },\n      "harvestMoisture": {\n        "avg": 18.224961609957166,\n        "min": 12.75,\n        "max": 21.18,\n        "unit": "percentage"\n      },\n      "dryVolumePerArea": {\n        "avg": 201.7963353621763,\n        "min": 1.467068855167438,\n        "max": 687.8289538734305,\n        "unit": "bu/ac"\n      },\n      "wetVolume": {\n        "avg": 0.10462611962093962,\n        "min": 0.0006777384937826164,\n        "max": 0.19756077093763266,\n        "unit": "bu"\n      },\n      "wetVolumePerArea": {\n        "avg": 209.86278232264567,\n        "min": 1.5677753669755121,\n        "max": 720.3728570631048,\n        "unit": "bu/ac"\n      },\n      "dryMassPerArea": {\n        "avg": 11300.594780281874,\n        "min": 82.15585588937653,\n        "max": 38518.421416912104,\n        "unit": "lb/ac"\n      },\n      "totalWetMass": {\n        "value": 72494.18277191388,\n        "unit": "lb"\n      },\n      "totalFuelUsed": {\n        "value": 196.25137347639,\n        "unit": "gal"\n      },\n      "varieties": [\n        {\n          "harvestMoisture": {\n            "avg": 18.224961609957166,\n            "min": 12.75,\n            "max": 21.18,\n            "unit": "percentage"\n          },\n          "wetMass": {\n            "value": 72494.18277191388,\n            "unit": "lb"\n          },\n          "wetMassPerArea": {\n            "value": 2.904060481369501,\n            "unit": "lb/ac"\n          },\n          "wetVolume": {\n            "value": 1294.538978069886,\n            "unit": "bu"\n          },\n          "area": {\n            "value": 24963.041657357968,\n            "unit": "m2"\n          },\n          "dryVolume": {\n            "value": 1244.7810844153173,\n            "unit": "bu"\n          },\n          "dryMassPerArea": {\n            "value": 2.7924377839874155,\n            "unit": "lb/ac"\n          },\n          "dryMass": {\n            "value": 69707.74072725822,\n            "unit": "lb"\n          },\n          "name": "Corn"\n        }\n      ],\n      "originalOperationData": {\n        "originalOperationType": "Harvesting"\n      },\n      "operationType": "harvested",\n      "dryMass": {\n        "avg": 5.6338592683470505,\n        "min": 0.035515410688779774,\n        "max": 10.88899187543496,\n        "unit": "lb"\n      },\n      "endTime": "2015-09-24T00:36:55.8Z",\n      "crop": [\n        "corn"\n      ],\n      "totalArea": {\n        "value": 24963.041657357968,\n        "unit": "m2"\n      },\n      "machinery": [\n        {\n          "name": "Case IH X010 Series 7010",\n          "type": "machine",\n          "serialNumber": "8227260",\n          "brand": "Case IH"\n        },\n        {\n          "name": "Case IH Corn Head 15ft 6row",\n          "type": "implement",\n          "brand": "Case IH"\n        }\n      ]\n    },\n    "geometry": {\n        "type": "MultiPolygon",\n        "coordinates": [[[\n            [-89.80434894561768,40.47791686563837],\n            [-89.80756759643555,40.4757623387113],\n            [-89.80746030807495,40.47302011353734],\n            [-89.80475664138794,40.47070219301965],\n            [-89.80080842971802,40.47068586935202],\n            [-89.79797601699828,40.472709973879255],\n            [-89.7978687286377,40.47569704893722],\n            [-89.80117321014404,40.47808008455794],\n            [-89.80434894561768,40.47791686563837]\n        ]]]\n    }\n}\n}\n'))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "tillage" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n"id": "0d702772-3ff0-4031-a151-d111f2fb3b9c",\n"provider": "providerName",\n"fields": [\n "d9b35409-6014-446b-a552-07274f98a9a2"\n],\n"fileFormat": "ISO11783",\n"fileName": "testFile.zip",\n"originalFile": "url",\n"downloadOriginalFile": "url",\n"rawGeojson": "url",\n"downloadRawGeojson": "url",\n"standardGeojson": "url",\n"downloadStandardGeojson": "url",\n"leafUserId": "577c611d-e526-4af5-bff7-263c58e6d1aa",\n"apiOwnerUsername": "test",\n"summary": {\n "type": "Feature",\n "properties": {\n   "elevation": {\n     "avg": 994.6466719525541,\n     "min": 994.64662073,\n     "max": 994.646672,\n     "unit": "ft"\n   },\n   "tillageDepthActual": {\n     "avg": 0,\n     "min": 0,\n     "max": 0,\n     "unit": "in"\n   },\n   "originalOperationData": {},\n   "startTime": "2016-09-13T20:33:14.786Z",\n   "operationType": "tillage",\n   "endTime": "2016-09-13T22:03:10.801Z",\n   "totalDistance": {\n     "value": 54476.663422289916,\n     "unit": "ft"\n   },\n   "totalArea": {\n     "value": 202441.90563950103,\n     "unit": "m2"\n   },\n   "tillType": ["Closing Disk"],\n   "tillageDepthTarget": {\n     "avg": 6,\n     "min": 6,\n     "max": 6,\n     "unit": "in"\n   }\n },\n "geometry": {\n   "type": "MultiPolygon",\n   "coordinates": [[[\n     [-89.80434894561768,40.47791686563837],\n     [-89.80756759643555,40.4757623387113],\n     [-89.80746030807495,40.47302011353734],\n     [-89.80475664138794,40.47070219301965],\n     [-89.80080842971802,40.47068586935202],\n     [-89.79797601699828,40.472709973879255],\n     [-89.7978687286377,40.47569704893722],\n     [-89.80117321014404,40.47808008455794],\n     [-89.80434894561768,40.47791686563837]\n   ]]]\n }\n}\n}\n')))),Object(b.b)("h3",{id:"properties-by-operation-type"},"Properties by Operation Type"),Object(b.b)("p",null,'Select the tab you want to see: "planted", "applied", "harvested", or "tillage".'),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"varieties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalPlanted"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int (number of seeds)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"downForce"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"singulation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalFuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests")),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalApplied"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tankMix"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalFuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests")),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalDryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalDryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"varieties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalFuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests",Object(b.b)("br",{parentName:"p"}),"\n","$ = Not available when the crop is ",Object(b.b)("em",{parentName:"p"},"sugarcane"))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "tillage"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalFuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests"))),Object(b.b)("h2",{id:"standard-geojson"},"Standard Geojson"),Object(b.b)("p",null,"When the data is present in the original file, Leaf standardizes names and units\nto create the standardGeojson."),Object(b.b)("p",null,"Below we list all the properties in the standardGeojson."),Object(b.b)("h3",{id:"summary-response-sample"},"Summary Response Sample"),Object(b.b)("p",null,'Each operation file returns with a "standardgeojson" URL that allows you to download a full point dataset from the operation in a standardized geojson format. Below is an example of the format of each point in these files.'),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "planted",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "variety": "string",\n      "area": "float",\n      "seedRate": "int",\n      "seedRateTarget": "int",\n      "seedDepth": "float",\n      "downForce": "float",\n      "singulation": "float",\n      "skips": "float",\n      "doubles": "float",\n      "fuelUsed": "float"\n  }\n}\n'))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "applied",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "area": "float",\n      "appliedRate": "float",\n      "appliedRateTarget": "float",\n      "fuelUsed": "float",      \n      "products": [\n      {\n          "name": "AMS",\n          "rate": {\n              "value": 15\n          }\n      },\n      {\n          "name": "Counter",\n          "rate": {\n              "value": 20\n          }\n      },\n      {\n          "name": "Water",\n          "rate": {\n              "value": 9.727\n              }\n      }\n      ]\n  }\n}\n'))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "harvestMoisture": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "harvested",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "variety": "string",\n      "area": "float",\n      "wetMass": "float",\n      "wetVolume": "float",\n      "wetMassPerArea": "float",\n      "wetVolumePerArea": "float",\n      "dryMass": "float",\n      "dryVolume": "float",\n      "dryMassPerArea": "float",\n      "dryVolumePerArea": "float",\n      "fuelUsed": "float"\n  }\n}\n'))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n "type": "Feature",\n "geometry": {\n     "type": "Point",\n     "coordinates": [-93.14995443980574, 41.67055240890354]\n },\n "properties": {\n     "speed": "float",\n     "heading": "float",\n     "distance": "float",\n     "tillageDepthTarget": "float",\n     "tillType": ["string"],\n     "recordingStatus": "string",\n     "timestamp": "string",\n     "operationType": "tillage",\n     "originalOperationType": "name of the operation as returned by the provider",\n     "equipmentWidth": "float",\n     "elevation": "float",\n     "area": "float",\n     "fuelUsed": "float"\n }\n}\n')))),Object(b.b)("h3",{id:"properties"},"Properties"),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance traveled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The rate of seeds planted at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being planted")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target rate of seeds to be planted at the point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cm"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The depth at which seeds were planted at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"productIndex"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Index of the applied product")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"downForce"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lbf"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The weight detected by the down force sensor on each row that has one")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"singulation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The performance of each meter on the planter")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"L or gal"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The fuel consumed"))))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance traveled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The amount of product being applied at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of dicts"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tank mix including products and ratio")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target amount of product to be applied at the point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of machine and implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"L or gal"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The fuel consumed"))))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point x,y")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance traveled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being harvested")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cropFlow"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Massic flow of the harvested crop")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"proteinPercentage"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Amount of protein content for the harvested product")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"samplingInterval"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Delta time from the previous recorded feature")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"L or gal"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The fuel consumed"))))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance traveled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "tillage"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target depth")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The actual depth")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of machine and implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fuelUsed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"L or gal"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The fuel consumed")))))),Object(b.b)("p",null,"*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","*","*"," = Usually in response but not required to pass tests",Object(b.b)("br",{parentName:"p"}),"\n","$ = Not available when the crop is ",Object(b.b)("em",{parentName:"p"},"sugarcane")),Object(b.b)("p",null,"Despite the example units, Leaf's API will push through every unit, if the processed file contains the ",Object(b.b)("inlineCode",{parentName:"p"},"required")," (marked with *) properties."),Object(b.b)("h3",{id:"valid-points"},"Valid points"),Object(b.b)("p",null,"The points in the standardGeoJSON are considered valid if all the following rules are true:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"property"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"rule"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0 and <100.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'= "On"')))),Object(b.b)("p",null,"The API will automatically clean the invalid points when the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview#cleanupstandardgeojson"}),Object(b.b)("inlineCode",{parentName:"a"},"cleanupStandardGeojson"))," configuration is enabled."),Object(b.b)("h3",{id:"images"},"Images"),Object(b.b)("p",null,"Also, Leaf displays all the numerical properties across all operation types via a png file. Here's a sample response from a Leaf harvested file."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "property": "area",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "wetMass",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "wetVolume",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "distance",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "wetVolumePerArea",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "equipmentWidth",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "wetMassPerArea",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "sectionId",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "elevation",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "harvestMoisture",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "heading",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "dryMass",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "dryMassPerArea",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "dryVolume",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  },\n  {\n    "property": "dryVolumePerArea",\n    "ramp": {\n        "0%": [200, 0, 0],\n        "35%": [255, 40, 0],\n        "45%": [255, 150, 0],\n        "55%": [255, 240, 0],\n        "65%": [0, 230, 0],\n        "75%": [0, 190, 0],\n        "100%": [0, 130, 0],\n        "nv": [0, 0, 0, 0 ]\n    },\n    "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n  }\n]\n')),Object(b.b)("h3",{id:"machine-files-units"},"Machine Files Units"),Object(b.b)("p",null,"Here is an example of Units from the numerical properties of the Machine Files."),Object(b.b)(r.a,{defaultValue:"harvested",values:[{label:"Planted",value:"planted"},{label:"Harvested",value:"harvested"},{label:"Applied",value:"applied"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "distance": "ft",\n  "heading": "arcdeg",\n  "speed": "mi/hr",\n  "area": "m2",\n  "appliedRate": "gal/ac",\n  "appliedRateTarget": "gal/ac",\n  "equipmentWidth": "ft",\n  "elevation": "m"\n}\n'))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "elevation": "ft",\n  "area": "m2",\n  "harvestMoisture": "percentage",\n  "dryVolumePerArea": "bu/ac",\n  "distance": "ft",\n  "heading": "arcdeg",\n  "dryVolume": "bu",\n  "wetVolume": "bu",\n  "wetVolumePerArea": "bu/ac",\n  "dryMassPerArea": "lb/ac",\n  "wetMassPerArea": "lb/ac",\n  "speed": "mi/hr",\n  "equipmentWidth": "ft",\n  "dryMass": "lb",\n  "wetMass": "lb"\n}\n'))),Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "speed": "mi/hr",\n  "distance": "ft",\n  "heading": "arcdeg",\n  "elevation": "ft",\n  "seedRateTarget": "seeds/ac",\n  "seedRate": "seeds/ac",\n  "downForce": "lbf",\n  "singulation": "prcnt",\n  "equipmentWidth": "ft",\n  "area": "m2"\n}\n'))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "distance": "ft",\n  "equipmentWidth": "ft",\n  "tillageDepthActual": "in",\n  "tillageDepthTarget": "in",\n  "elevation": "ft",\n  "area": "m2"\n}\n')))))}d.isMDXComponent=!0},156:function(t,e,a){"use strict";a.d(e,"a",(function(){return p})),a.d(e,"b",(function(){return o}));var n=a(0),l=a.n(n);function b(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function c(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){b(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},b=Object.keys(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var O=l.a.createContext({}),j=function(t){var e=l.a.useContext(O),a=e;return t&&(a="function"==typeof t?t(e):c(c({},e),t)),a},p=function(t){var e=j(t.components);return l.a.createElement(O.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return l.a.createElement(l.a.Fragment,{},e)}},m=l.a.forwardRef((function(t,e){var a=t.components,n=t.mdxType,b=t.originalType,r=t.parentName,O=i(t,["components","mdxType","originalType","parentName"]),p=j(a),m=n,o=p["".concat(r,".").concat(m)]||p[m]||d[m]||b;return a?l.a.createElement(o,c(c({ref:e},O),{},{components:a})):l.a.createElement(o,c({ref:e},O))}));function o(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var b=a.length,r=new Array(b);r[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:n,r[1]=c;for(var O=2;O<b;O++)r[O]=a[O];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},157:function(t,e,a){"use strict";var n=a(0),l=a(20);e.a=function(){var t=Object(n.useContext)(l.a);if(null===t)throw new Error("Docusaurus context not provided");return t}},158:function(t,e,a){"use strict";function n(t){var e,a,l="";if("string"==typeof t||"number"==typeof t)l+=t;else if("object"==typeof t)if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(a=n(t[e]))&&(l&&(l+=" "),l+=a);else for(e in t)t[e]&&(l&&(l+=" "),l+=e);return l}e.a=function(){for(var t,e,a=0,l="";a<arguments.length;)(t=arguments[a++])&&(e=n(t))&&(l&&(l+=" "),l+=e);return l}},159:function(t,e,a){"use strict";a.d(e,"b",(function(){return b})),a.d(e,"a",(function(){return r}));var n=a(157),l=a(160);function b(){var t=Object(n.a)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,a=void 0===e?"/":e,b=t.url;return{withBaseUrl:function(t,e){return function(t,e,a,n){var b=void 0===n?{}:n,r=b.forcePrependBaseUrl,c=void 0!==r&&r,i=b.absolute,O=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(l.b)(a))return a;if(c)return e+a;var j=!a.startsWith(e)?e+a.replace(/^\//,""):a;return O?t+j:j}(b,a,t,e)}}}function r(t,e){return void 0===e&&(e={}),(0,b().withBaseUrl)(t,e)}},160:function(t,e,a){"use strict";function n(t){return!0===/^(\w*:|\/\/)/.test(t)}function l(t){return void 0!==t&&!n(t)}a.d(e,"b",(function(){return n})),a.d(e,"a",(function(){return l}))},161:function(t,e,a){"use strict";var n=a(0),l=Object(n.createContext)(void 0);e.a=l},162:function(t,e,a){"use strict";var n=a(0),l=a(161);e.a=function(){var t=Object(n.useContext)(l.a);if(null==t)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return t}},163:function(t,e,a){"use strict";var n=a(0),l=a.n(n),b=a(162),r=a(158),c=a(48),i=a.n(c),O=37,j=39;e.a=function(t){var e=t.block,a=t.children,c=t.defaultValue,p=t.values,d=t.groupId,m=Object(b.a)(),o=m.tabGroupChoices,u=m.setTabGroupChoices,s=Object(n.useState)(c),g=s[0],N=s[1],f=Object(n.useState)(!1),y=f[0],h=f[1];if(null!=d){var v=o[d];null!=v&&v!==g&&p.some((function(t){return t.value===v}))&&N(v)}var w=function(t){N(t),null!=d&&u(d,t)},T=[],x=function(t){t.metaKey||t.altKey||t.ctrlKey||h(!0)},P=function(){h(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",P)}),[]),l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":e})},p.map((function(t){var e=t.value,a=t.label;return l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===e,className:Object(r.a)("tabs__item",i.a.tabItem,{"tabs__item--active":g===e}),style:y?{}:{outline:"none"},key:e,ref:function(t){return T.push(t)},onKeyDown:function(t){!function(t,e,a){switch(a.keyCode){case j:!function(t,e){var a=t.indexOf(e)+1;t[a]?t[a].focus():t[0].focus()}(t,e);break;case O:!function(t,e){var a=t.indexOf(e)-1;t[a]?t[a].focus():t[t.length-1].focus()}(t,e)}}(T,t.target,t),x(t)},onFocus:function(){return w(e)},onClick:function(){w(e),h(!1)},onPointerDown:function(){return h(!1)}},a)}))),l.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(t){return t.props.value===g}))[0]))}},164:function(t,e,a){"use strict";var n=a(0),l=a.n(n);e.a=function(t){return l.a.createElement("div",null,t.children)}}}]);