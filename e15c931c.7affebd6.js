(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{135:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),i=(a(0),a(157)),s=a(164),o=a(165),p=(a(160),{title:"Beta > Prescriptions Endpoints",description:"Beta - Prescriptions Endpoints",sidebar_label:"Endpoints"}),l={unversionedId:"beta_prescriptions_endpoints",id:"beta_prescriptions_endpoints",isDocsHomePage:!1,title:"Beta > Prescriptions Endpoints",description:"Beta - Prescriptions Endpoints",source:"@site/docs/beta_prescriptions_endpoints.md",permalink:"/docs/docs/beta_prescriptions_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/beta_prescriptions_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Beta > Assets Endpoints",permalink:"/docs/docs/beta_assets_endpoints"},next:{title:"Prescriptions > Operations Planning Endpoints",permalink:"/docs/docs/operations_planning_endpoints"}},c=[{value:"About",id:"about",children:[]},{value:"Prescription (BETA)",id:"prescription-beta",children:[{value:"Upload prescription to Raven Slingshot",id:"upload-prescription-to-raven-slingshot",children:[]},{value:"List prescriptions from Raven Slingshot",id:"list-prescriptions-from-raven-slingshot",children:[]},{value:"Upload prescription to John Deere",id:"upload-prescription-to-john-deere",children:[]},{value:"List prescriptions from John Deere",id:"list-prescriptions-from-john-deere",children:[]},{value:"Download prescription from John Deere",id:"download-prescription-from-john-deere",children:[]},{value:"Upload prescription to CNHi",id:"upload-prescription-to-cnhi",children:[]},{value:"List prescriptions from CNHi",id:"list-prescriptions-from-cnhi",children:[]},{value:"Upload prescription to Climate FieldView",id:"upload-prescription-to-climate-fieldview",children:[]},{value:"Upload prescription to Trimble",id:"upload-prescription-to-trimble",children:[]},{value:"Upload prescription to AgLeader",id:"upload-prescription-to-agleader",children:[]}]}],b={rightToc:c};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"about"},"About"),Object(i.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/beta/prescription/api\n")),Object(i.b)("p",null,"See below the REST resources and their endpoints available in this service."),Object(i.b)("h2",{id:"prescription-beta"},"Prescription (BETA)"),Object(i.b)("p",null,"This feature has the following endpoints available:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-raven-slingshot"}),"Upload prescription to Raven Slingshot")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/ravenSlingshot"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#list-prescriptions-from-raven-slingshot"}),"List prescriptions from Raven Slingshot")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/ravenSlingshot"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#list-prescriptions-from-john-deere"}),"Lists prescriptions from John Deere")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/johnDeere"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-john-deere"}),"Upload prescription to John Deere")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/johnDeere"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#download-prescription-from-john-deere"}),"Download prescription from John Deere")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/johnDeere/download"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-cnhi"}),"Upload prescription to CNHi")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/cnhi"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#list-prescriptions-from-cnhi"}),"List prescriptions from CNHi")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/cnhi"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-climate-fieldview"}),"Upload prescription to Climate FieldView")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/climateFieldView"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-trimble"}),"Upload prescription to Trimble")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/trimble"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-prescription-to-agleader"}),"Upload prescription to AgLeader")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/agleader"))))),Object(i.b)("h3",{id:"upload-prescription-to-raven-slingshot"},"Upload prescription to Raven Slingshot"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/ravenSlingshot")),Object(i.b)("p",null,"Upload a prescription using the Raven Slingshot credentials of the LeafUserId."),Object(i.b)("p",null,"The file to be uploaded needs to be .zip and contain one of each of the following file extension: shp, dbf, shx; and all files must have the same name. The zip file cannot contain subfolders."),Object(i.b)("h4",{id:"example"},"Example:"),Object(i.b)("p",null,"A zip file named \u201cprescription_rx_map\u201d, containing the following files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shx")),Object(i.b)("h4",{id:"request-examples"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_rx_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_rx_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_rx_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\n")))),Object(i.b)("h4",{id:"response"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')),Object(i.b)("h3",{id:"list-prescriptions-from-raven-slingshot"},"List prescriptions from Raven Slingshot"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/ravenSlingshot")),Object(i.b)("p",null,"List the existing prescriptions available in the provider."),Object(i.b)("h4",{id:"request-examples-1"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/ravenSlingshot'\n")))),Object(i.b)("h4",{id:"response-1"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "str",\n    "name": "str"\n  },\n  {\n    "id": "str",\n    "name": "str"\n  }\n]\n')),Object(i.b)("h3",{id:"upload-prescription-to-john-deere"},"Upload prescription to John Deere"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/johnDeere")),Object(i.b)("p",null,"Upload a prescription using the John Deere credentials of the LeafUserId."),Object(i.b)("p",null,"There is a required request parameter called organizationId for this endpoint to work.\nThis property should be the id of the organization at JohnDeere."),Object(i.b)("p",null,'The file to be uploaded needs to be .zip and have a folder called "Rx" containing one of each of the following file extension: shp, dbf, shx; and all files must have the same name. The zip file cannot contain subfolders.'),Object(i.b)("h4",{id:"example-1"},"Example:"),Object(i.b)("p",null,'A .zip file named \u201cprescription_rx_map\u201d, having a parent folder called "Rx", containing the following files:'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Rx/",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shx")))),Object(i.b)("h4",{id:"request-examples-2"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_rx_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_rx_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_rx_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\n")))),Object(i.b)("h4",{id:"response-2"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')),Object(i.b)("h3",{id:"list-prescriptions-from-john-deere"},"List prescriptions from John Deere"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/johnDeere")),Object(i.b)("p",null,"List the existing prescriptions available in the provider."),Object(i.b)("p",null,"There is a required request parameter called organizationId for this endpoint to work.\nThis property should be the id of the organization at JohnDeere."),Object(i.b)("h4",{id:"request-examples-3"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere?organizationId={organizationId}'\n")))),Object(i.b)("h4",{id:"response-3"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "str",\n    "name": "str"\n  },\n  {\n    "id": "str",\n    "name": "str"\n  }\n]\n')),Object(i.b)("h3",{id:"download-prescription-from-john-deere"},"Download prescription from John Deere"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/johnDeere/download")),Object(i.b)("p",null,"Download a prescription related to a file ID using the LeafUserId's John Deere credentials. This file ID is relative\nto the one available from the ",Object(i.b)("strong",{parentName:"p"},"John Deere side"),"."),Object(i.b)("h4",{id:"request-examples-4"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere/download?fileId={fileId}'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere/download?fileId={fileId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/johnDeere/download?fileId={fileId}'\n")))),Object(i.b)("h4",{id:"response-4"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "fileUrl": "url_to_download"\n}\n')),Object(i.b)("h3",{id:"upload-prescription-to-cnhi"},"Upload prescription to CNHi"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/cnhi")),Object(i.b)("p",null,"Upload a prescription using the CNHi credentials of the LeafUserId."),Object(i.b)("p",{align:"justify"},Object(i.b)("p",null,"You can get the company Id from the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/field_boundary_management_endpoints#get-all-growers"}),"grower endpoints")," using the property ",Object(i.b)("inlineCode",{parentName:"p"},"providerOrganizationId"),".")),Object(i.b)("p",null,"The file to be uploaded must be a .zip and contain each of the following file extension: shp, dbf and shx.\nAll files must have the same name. The zip file cannot contain subfolders."),Object(i.b)("h4",{id:"example-2"},"Example:"),Object(i.b)("p",null,"A .zip file named \u201cprescription_map\u201d containing the following files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"prescription_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_map.shx")),Object(i.b)("h4",{id:"request-examples-5"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\n")))),Object(i.b)("h4",{id:"response-5"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')),Object(i.b)("h3",{id:"list-prescriptions-from-cnhi"},"List prescriptions from CNHi"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/cnhi")),Object(i.b)("p",null,"List the existing prescriptions available in the provider."),Object(i.b)("p",{align:"justify"},Object(i.b)("p",null,"You can get the company Id from the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/field_boundary_management_endpoints#get-all-growers"}),"grower endpoints")," using the property ",Object(i.b)("inlineCode",{parentName:"p"},"providerOrganizationId"),".")),Object(i.b)("h4",{id:"request-examples-6"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/cnhi?companyId={companyId}'\n")))),Object(i.b)("h4",{id:"response-6"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "str",\n    "name": "str"\n  },\n  {\n    "id": "str",\n    "name": "str"\n  }\n]\n')),Object(i.b)("h3",{id:"upload-prescription-to-climate-fieldview"},"Upload prescription to Climate FieldView"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/climateFieldView")),Object(i.b)("p",null,"Upload a prescription using the Climate FieldView credentials of the LeafUserId."),Object(i.b)("p",null,"The file to be uploaded needs to be .zip and contain one of each of the following file extension: shp, dbf, shx; and all files must have the same name. The zip file cannot contain subfolders."),Object(i.b)("h4",{id:"example-3"},"Example:"),Object(i.b)("p",null,"A zip file named \u201cprescription_rx_map\u201d, containing the following files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shx")),Object(i.b)("h4",{id:"request-examples-7"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/climateFieldView'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_rx_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/climateFieldView'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_rx_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_rx_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/climateFieldView'\n")))),Object(i.b)("h4",{id:"response-7"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')),Object(i.b)("h3",{id:"upload-prescription-to-trimble"},"Upload prescription to Trimble"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/trimble")),Object(i.b)("p",null,"Upload a prescription using the Trimble credentials of the LeafUserId."),Object(i.b)("p",null,"The file to be uploaded needs to be .zip and contain one of each of the following file extension: shp, dbf, shx; and all files must have the same name. The zip file cannot contain subfolders."),Object(i.b)("p",null,"Also, in Raven's case the user must fill the ",Object(i.b)("inlineCode",{parentName:"p"},"rateAttribute")," and ",Object(i.b)("inlineCode",{parentName:"p"},"rateUnit")," as required parameters within the URL. An optional parameter is the ",Object(i.b)("inlineCode",{parentName:"p"},"fileName"),"."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"rateAttribute")," must contain the name of the column from the Shapefile."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"rateUnit")," must contain one the values in the table below"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"th"},"rateUnit")))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"gal/ac")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"l/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lbs/ac")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ton/ac")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kg/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"t/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kS/ac")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kS/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lbs(N)/ac")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kg(N)/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"S/ha")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"S/ha")))),Object(i.b)("h4",{id:"example-4"},"Example:"),Object(i.b)("p",null,"A zip file named \u201cprescription_rx_map\u201d, containing the following files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shx")),Object(i.b)("h4",{id:"request-examples-8"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/trimble?rateAttribute={}&rateUnit={}'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_rx_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/trimble?rateAttribute={}&rateUnit={}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_rx_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_rx_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/trimble?rateAttribute={}&rateUnit={}'\n")))),Object(i.b)("h4",{id:"response-8"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')),Object(i.b)("h3",{id:"upload-prescription-to-agleader"},"Upload prescription to AgLeader"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--warning"},"POST")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/agleader")),Object(i.b)("p",null,"Upload a prescription using the AgLeader credentials of the LeafUserId."),Object(i.b)("p",null,"The file to be uploaded needs to be .zip and contain one of each of the following file extension: shp, dbf, shx; and all files must have the same name. The zip file cannot contain subfolders."),Object(i.b)("h4",{id:"example-5"},"Example:"),Object(i.b)("p",null,"A zip file named \u201cprescription_rx_map\u201d, containing the following files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shp"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.dbf"),Object(i.b)("li",{parentName:"ul"},"prescription_rx_map.shx")),Object(i.b)("h4",{id:"request-examples-9"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/agleader'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst form = new FormData()\nform.append('file', 'prescription_rx_map.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(o.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/agleader'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('prescription_rx_map.zip')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(i.b)(o.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=prescription_rx_map.zip' \\\n    'https://api.withleaf.io/services/beta/prescription/api/users/{leafUserId}/agleader'\n")))),Object(i.b)("h4",{id:"response-9"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "str",\n  "name": "str"\n}\n')))}d.isMDXComponent=!0},157:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),c=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=c(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=c(a),u=n,O=b["".concat(s,".").concat(u)]||b[u]||d[u]||i;return a?r.a.createElement(O,o(o({ref:t},l),{},{components:a})):r.a.createElement(O,o({ref:t},l))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=a[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},158:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},159:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},160:function(e,t,a){"use strict";a.d(t,"b",(function(){return i})),a.d(t,"a",(function(){return s}));var n=a(158),r=a(161);function i(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var i=void 0===n?{}:n,s=i.forcePrependBaseUrl,o=void 0!==s&&s,p=i.absolute,l=void 0!==p&&p;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(o)return t+a;var c=!a.startsWith(t)?t+a.replace(/^\//,""):a;return l?e+c:c}(i,a,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},161:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},162:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},163:function(e,t,a){"use strict";var n=a(0),r=a(162);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},164:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=a(163),s=a(159),o=a(48),p=a.n(o),l=37,c=39;t.a=function(e){var t=e.block,a=e.children,o=e.defaultValue,b=e.values,d=e.groupId,u=Object(i.a)(),O=u.tabGroupChoices,m=u.setTabGroupChoices,j=Object(n.useState)(o),h=j[0],f=j[1],g=Object(n.useState)(!1),N=g[0],v=g[1];if(null!=d){var T=O[d];null!=T&&T!==h&&b.some((function(e){return e.value===T}))&&f(T)}var y=function(e){f(e),null!=d&&m(d,e)},x=[],U=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},_=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",U),window.addEventListener("mousedown",_)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":t})},b.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(s.a)("tabs__item",p.a.tabItem,{"tabs__item--active":h===t}),style:N?{}:{outline:"none"},key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case c:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e),U(e)},onFocus:function(){return y(t)},onClick:function(){y(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},165:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);