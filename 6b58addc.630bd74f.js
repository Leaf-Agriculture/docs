(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{100:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),l=(a(0),a(156)),i=a(163),s=a(164),o=(a(159),{title:"Upload Field Boundary Endpoints",description:"Upload Field Boundary Field Boundary - Endpoints",sidebar_label:"Endpoints"}),c={unversionedId:"field_boundary_management_upload_endpoints",id:"field_boundary_management_upload_endpoints",isDocsHomePage:!1,title:"Upload Field Boundary Endpoints",description:"Upload Field Boundary Field Boundary - Endpoints",source:"@site/docs/field_boundary_management_upload_endpoints.md",permalink:"/docs/docs/field_boundary_management_upload_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/field_boundary_management_upload_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Field Boundary Management Endpoints",permalink:"/docs/docs/field_boundary_management_endpoints"},next:{title:"Manual File Upload Overview",permalink:"/docs/docs/converters_overview"}},d=[{value:"About",id:"about",children:[]},{value:"Upload endpoints",id:"upload-endpoints",children:[{value:"Upload a field file",id:"upload-a-field-file",children:[]},{value:"Get all uploads",id:"get-all-uploads",children:[]},{value:"Get an upload",id:"get-an-upload",children:[]},{value:"Get the upload entries",id:"get-the-upload-entries",children:[]}]}],b={rightToc:d};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"about"},"About"),Object(l.b)("p",null,"This file upload service allows the creation of field boundaries from uploaded field files. It currently supports creating field boundaries using polygon and multi-polygon geometries from zip files that contain shapefiles, GeoJSON, or KML files. To call them easily, we recommend using ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"Leaf's Postman collection"),"."),Object(l.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/uploadservice/api\n")),Object(l.b)("p",null,"There is a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rest-resources"}),"REST resources")," section if you want to check it out."),Object(l.b)("p",null,"This service has the following endpoints available:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-a-field-file"}),"Upload a field file")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--warning"},"POST")," ",Object(l.b)("inlineCode",{parentName:"td"},"/upload"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-uploads"}),"Get all uploads")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/upload"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-an-upload"}),"Get an upload")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/upload/{uploadId}"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-upload-entries"}),"Get the upload entries")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/upload/{uploadId}/entries"))))),Object(l.b)("h2",{id:"upload-endpoints"},"Upload endpoints"),Object(l.b)("h3",{id:"upload-a-field-file"},"Upload a field file"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--warning"},"POST")," ",Object(l.b)("inlineCode",{parentName:"p"},"/upload")),Object(l.b)("p",null,"Creates field boundaries in Leaf from files. The file must be sent as a zip."),Object(l.b)("p",null,"It supports polygons and multi-polygons from the following spatial formats:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Shapefile (minimum ",Object(l.b)("inlineCode",{parentName:"li"},"*.shp"),", ",Object(l.b)("inlineCode",{parentName:"li"},"*.dbf"),", and ",Object(l.b)("inlineCode",{parentName:"li"},"*.shx")," must be present)"),Object(l.b)("li",{parentName:"ul"},"GeoJSON"),Object(l.b)("li",{parentName:"ul"},"KML/KMZ")),Object(l.b)("p",null,"This endpoint accepts a .zip of multilevel files, detects the valid files from the\n.zip, and returns the ID of the upload, which can be used to retrieve\nthe ID's of the fields created/processed in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#get-the-upload-entries"}),"entries endpoint"),"."),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Limitations")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Currently, our upload endpoints accepts files with the maximum size limited to 3 gigabytes and with up to 100 fields per upload."))),Object(l.b)("p",null,"This endpoint requires the ",Object(l.b)("inlineCode",{parentName:"p"},"leafUserId")," parameter and it also accepts the optional ",Object(l.b)("inlineCode",{parentName:"p"},"farmId")," parameter, which supports any existent Leaf farm ID and if present, all valid fields will be created under the informed farm."),Object(l.b)("p",null,"Leaf will project all the geometries to WGS 84 (EPSG:4326). If there is a property/column called ",Object(l.b)("inlineCode",{parentName:"p"},"name")," available in the file, Leaf API will use it as the field name property."),Object(l.b)("h4",{id:"request-examples"},"Request examples"),Object(l.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/uploadservice/api/upload?leafUserId={leafUserId}'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\nconst form = new FormData()\nform.append('file', 'shapefile.zip')\n\naxios.post(endpoint, form, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/uploadservice/api/upload?leafUserId={leafUserId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('shapefile.zip', 'rb')}\n\nresponse = requests.post(endpoint, headers=headers, files=files)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=shapefile.zip' \\\n    'https://api.withleaf.io/services/uploadservice/api/upload?' \\\n    'leafUserId={leafUserId}'\n")))),Object(l.b)("h4",{id:"response"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "uuid",\n    "leafUserId": "uuid",\n    "originalFileUrl": "url",\n    "fileName": "shapefile.zip",\n    "status": "RECEIVED",\n    "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(l.b)("p",null,"The upload ID returned as ",Object(l.b)("inlineCode",{parentName:"p"},"id")," can be used to retrieve on ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#get-an-upload"}),"Get an upload")," the updated status and individual processed fields IDs."),Object(l.b)("h5",{id:"upload-status"},"Upload status"),Object(l.b)("p",null,"The possible ",Object(l.b)("inlineCode",{parentName:"p"},"status")," are:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RECEIVED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the default state for every upload created")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROCESSED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When all the files included in the upload were processed, and at least one file have status SUCCESS")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FAILED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The upload did not generated any field boundary with status SUCCESS")))),Object(l.b)("h3",{id:"get-all-uploads"},"Get all uploads"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/upload")),Object(l.b)("p",null,"Gets all uploads."),Object(l.b)("h4",{id:"request-examples-1"},"Request examples"),Object(l.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/uploadservice/api/upload'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/uploadservice/api/upload'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/uploadservice/api/upload'\n")))),Object(l.b)("h4",{id:"response-1"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n      "id": "uuid",\n      "leafUserId": "uuid",\n      "originalFileUrl": "url",\n      "fileName": "file.zip",\n      "status": "PROCESSED",\n      "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n  },\n  {\n      "id": "uuid",\n      "leafUserId": "uuid",\n      "originalFileUrl": "url",\n      "fileName": "shapefile.zip",\n      "status": "RECEIVED",\n      "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n  }\n]\n')),Object(l.b)("p",null,"The possible ",Object(l.b)("inlineCode",{parentName:"p"},"status")," are listed ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#upload-status"}),"here"),"."),Object(l.b)("h3",{id:"get-an-upload"},"Get an upload"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/upload/{uploadId}")),Object(l.b)("p",null,"Gets an upload by the upload id."),Object(l.b)("h4",{id:"request-examples-2"},"Request examples"),Object(l.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}'\n")))),Object(l.b)("h4",{id:"response-2"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "uuid",\n    "leafUserId": "uuid",\n    "originalFileUrl": "url",\n    "fileName": "shapefile.zip",\n    "status": "PROCESSED",\n    "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n}\n')),Object(l.b)("p",null,"The possible ",Object(l.b)("inlineCode",{parentName:"p"},"status")," are listed ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#upload-status"}),"here"),"."),Object(l.b)("h3",{id:"get-the-upload-entries"},"Get the upload entries"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/upload/{uploadId}/entries")),Object(l.b)("p",null,"Returns the result of each file identified as compatible in the processing."),Object(l.b)("h4",{id:"request-examples-3"},"Request examples"),Object(l.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}/entries'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}/entries'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/uploadservice/api/upload/{uploadId}/entries'\n")))),Object(l.b)("h4",{id:"response-3"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "id": "uuid",\n        "fieldId": [\n            "uuid",\n            "uuid"\n        ],\n        "converterFormat": "GEOJSON",\n        "originalFileUrl": "url",\n        "leafUserId": "uuid",\n        "uploadId": "uuid",\n        "status": "FINISHED",\n        "createFieldErrorDetails": [],\n        "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n        "processedTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n    },\n    {\n        "id": "uuid",\n        "fieldId": [\n            "uuid",\n            "uuid",\n            "uuid"\n        ],\n        "converterFormat": "SHAPEFILE",\n        "originalFileUrl": "url",\n        "leafUserId": "uuid",\n        "uploadId": "uuid",\n        "status": "FINISHED",\n        "createFieldErrorDetails": [],\n        "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n        "processedTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n    },\n    {\n        "id": "uuid",\n        "fieldId": [\n            "uuid"\n        ],\n        "converterFormat": "KML",\n        "originalFileUrl": "url",\n        "leafUserId": "uuid",\n        "uploadId": "uuid",\n        "status": "FINISHED",\n        "createFieldErrorDetails": [],\n        "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n        "processedTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n    }\n]\n')),Object(l.b)("p",null,"The entries response has the list of the fields created for each recognized file, it can be fetched in the ",Object(l.b)("inlineCode",{parentName:"p"},"fieldId")," property. More information about the created fields can be fetched using the ID in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/field_boundary_management_endpoints#get-a-field"}),"Get a field endpoint"),"."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"converterFormat")," will show the identified format: ",Object(l.b)("inlineCode",{parentName:"p"},"SHAPEFILE"),", ",Object(l.b)("inlineCode",{parentName:"p"},"GEOJSON"),", or ",Object(l.b)("inlineCode",{parentName:"p"},"KML"),"."),Object(l.b)("p",null,"If an error occurs for any entry in the file it will be showed in the ",Object(l.b)("inlineCode",{parentName:"p"},"createFieldErrorDetails")," array."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "id": "uuid",\n        "fieldId": [\n            "uuid",\n            "uuid"\n        ],\n        "converterFormat": "GEOJSON",\n        "originalFileUrl": "url",\n        "leafUserId": "uuid",\n        "uploadId": "uuid",\n        "status": "PARTIALLY_FINISHED",\n        "createFieldErrorDetails": [\n            "{\\"type\\":\\"https://www.jhipster.tech/problem/problem-with-message\\",\\"title\\":\\"Invalid geometry: Self-intersection  at POINT (-39.86283923292457 -18.46470271875014)\\",\\"status\\":400,\\"path\\":\\"/api/system/users/bfa69ef7-7577-4902-9e93-890e2878e1fc/createField\\",\\"message\\":\\"Invalid geometry: Self-intersection  at POINT (-39.86283923292457 -18.46470271875014)\\",\\"errorKey\\":\\"invalidGeometry\\"}"\n        ],\n        "createdTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'",\n        "processedTime": "yyyy-MM-dd\'T\'HH:mm:ss.SSSSSS\'Z\'"\n    }\n]\n')),Object(l.b)("p",null,"The possible ",Object(l.b)("inlineCode",{parentName:"p"},"status")," for each file is described below:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROCESSING"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The file is processing, it is the initial status")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"CONVERTED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The file was converted but the process hasn't finished yet")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FINISHED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The file process is finished and the fields were created")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FAILED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A failure occurred during the file processing")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PARTIALLY_FINISHED"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Some of the fields were not created due to a processing error or invalid registers")))))}p.isMDXComponent=!0},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},b=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),b=d(a),u=n,O=b["".concat(i,".").concat(u)]||b[u]||p[u]||l;return a?r.a.createElement(O,s(s({ref:t},c),{},{components:a})):r.a.createElement(O,s({ref:t},c))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},157:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},158:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},159:function(e,t,a){"use strict";a.d(t,"b",(function(){return l})),a.d(t,"a",(function(){return i}));var n=a(157),r=a(160);function l(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,l=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var l=void 0===n?{}:n,i=l.forcePrependBaseUrl,s=void 0!==i&&i,o=l.absolute,c=void 0!==o&&o;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(s)return t+a;var d=!a.startsWith(t)?t+a.replace(/^\//,""):a;return c?e+d:d}(l,a,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,l().withBaseUrl)(e,t)}},160:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},161:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},162:function(e,t,a){"use strict";var n=a(0),r=a(161);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},163:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=a(162),i=a(158),s=a(48),o=a.n(s),c=37,d=39;t.a=function(e){var t=e.block,a=e.children,s=e.defaultValue,b=e.values,p=e.groupId,u=Object(l.a)(),O=u.tabGroupChoices,m=u.setTabGroupChoices,j=Object(n.useState)(s),f=j[0],h=j[1],y=Object(n.useState)(!1),N=y[0],g=y[1];if(null!=p){var v=O[p];null!=v&&v!==f&&b.some((function(e){return e.value===v}))&&h(v)}var T=function(e){h(e),null!=p&&m(p,e)},S=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},I=function(){g(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",I)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},b.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===t,className:Object(i.a)("tabs__item",o.a.tabItem,{"tabs__item--active":f===t}),style:N?{}:{outline:"none"},key:t,ref:function(e){return S.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case d:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(S,e.target,e),E(e)},onFocus:function(){return T(t)},onClick:function(){T(t),g(!1)},onPointerDown:function(){return g(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===f}))[0]))}},164:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);