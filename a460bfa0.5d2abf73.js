(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{120:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return d}));var n=a(2),i=a(6),l=(a(0),a(158)),r=a(165),s=a(166),b=(a(161),{title:"Crop Monitoring Endpoints",description:"Crop Monitoring - Endpoints",sidebar_label:"Endpoints"}),c={unversionedId:"crop_monitoring_endpoints",id:"crop_monitoring_endpoints",isDocsHomePage:!1,title:"Crop Monitoring Endpoints",description:"Crop Monitoring - Endpoints",source:"@site/docs/crop_monitoring_endpoints.md",permalink:"/docs/docs/crop_monitoring_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/crop_monitoring_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Planet Overview",permalink:"/docs/docs/crop_monitoring_planet_overview"},next:{title:"Weather Overview",permalink:"/docs/docs/weather_overview"}},o=[{value:"Endpoints",id:"endpoints",children:[{value:"Get all satellite fields",id:"get-all-satellite-fields",children:[]},{value:"Get a satellite field",id:"get-a-satellite-field",children:[]},{value:"Get images of satellite field",id:"get-images-of-satellite-field",children:[]},{value:"Get an image of satellite field",id:"get-an-image-of-satellite-field",children:[]},{value:"Create a satellite field",id:"create-a-satellite-field",children:[]},{value:"Delete a satellite field",id:"delete-a-satellite-field",children:[]},{value:"Get subscription for Planet",id:"get-subscription-for-planet",children:[]},{value:"Reprocess satellite images",id:"reprocess-satellite-images",children:[]}]},{value:"Alerts",id:"alerts",children:[{value:"List of Crop Monitoring Events",id:"list-of-crop-monitoring-events",children:[]}]}],p={rightToc:o};function d(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("div",{className:"admonition admonition-success alert alert--success"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"PLANET")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"If you wish to test our Planet Imagery service, you will be ",Object(l.b)("strong",{parentName:"p"},"required")," to use ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#sample-geometry"}),"THIS GEOMETRY")," for your testing purposes. If you need to use a different geometry for testing purposes, ",Object(l.b)("strong",{parentName:"p"},"you will be billed for this usage"),". Please contact our team on ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"mailto:sales@withleaf.io"}),"sales@withleaf.io")," to discuss your options should you require different testing geometry."))),Object(l.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/satellite/api\n")),Object(l.b)("p",null,"This service has the following endpoints available:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-satellite-fields"}),"Get all satellite fields")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-satellite-field"}),"Get a satellite field")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-images-of-satellite-field"}),"Get images of satellite field")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}/processes"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-an-image-of-satellite-field"}),"Get an image of satellite field")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}/processes/{id}"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#create-a-satellite-field"}),"Create a satellite field")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--warning"},"POST")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#delete-a-satellite-field"}),"Delete a satellite field")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#get-subscription-for-planet"}),"Get subscription for Planet")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}/subscription"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"#reprocess-satellite-images"}),"Reprocess satelite images")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("span",{class:"badge badge--warning"},"POST")," ",Object(l.b)("inlineCode",{parentName:"td"},"/fields/{id}/process/{id}/reprocess"))))),Object(l.b)("h2",{id:"endpoints"},"Endpoints"),Object(l.b)("h3",{id:"get-all-satellite-fields"},"Get all satellite fields"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields")),Object(l.b)("p",null,"Returns paged results for all satellite fields registered."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"externalId"),": external ID used in the field's registration"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the field"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"sort"),", the sorting order of the results; can be multi-value, where the first value to be passed will have preference in ordering over the next ones; you can also specify the order as ",Object(l.b)("inlineCode",{parentName:"li"},"asc")," or ",Object(l.b)("inlineCode",{parentName:"li"},"desc")," with ",Object(l.b)("inlineCode",{parentName:"li"},"asc")," being the default. Example: id, desc",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Valid values for sorting are: createdAt, providers and externalId")))),Object(l.b)("h4",{id:"request-examples"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/satellite/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/satellite/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields'\n")))),Object(l.b)("h4",{id:"response"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "externalId": "your field id",\n    "createdTime": "2024-02-19T17:06:32.131848",\n    "geometry": {\n      "type": "MultiPolygon",\n      "coordinates": [...]\n    },\n    "providers": [\n      "sentinel", \n      "planet"\n    ]\n  },\n  ....\n]\n')),Object(l.b)("h3",{id:"get-a-satellite-field"},"Get a satellite field"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}")),Object(l.b)("p",null,"Fetches a field entry based on its external id."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"id"),": external ID used in the field's registration"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the field")),Object(l.b)("h4",{id:"request-examples-1"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/satellite/api/fields/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/satellite/api/fields/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields/{id}'\n")))),Object(l.b)("h4",{id:"response-1"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "externalId": "your field id",\n  "createdTime": "2024-02-19T17:06:32.131848",\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [...]\n  },\n  "providers": [\n    "sentinel", \n    "planet"\n  ],\n  "extent": {\n      "xmin": 0.0,\n      "xmax": 0.0,\n      "ymin": 0.0,\n      "ymax": 0.0\n  }\n}\n')),Object(l.b)("h3",{id:"get-images-of-satellite-field"},"Get images of satellite field"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}/processes")),Object(l.b)("p",null,"Returns images for a given field ",Object(l.b)("inlineCode",{parentName:"p"},"id"),"."),Object(l.b)("p",null,"We return the following images (tifs are EPSG:4326, pngs are EPSG:3857):"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"RGB as tiff and as png"),Object(l.b)("li",{parentName:"ul"},"Colorized NDVI as tiff and as png"),Object(l.b)("li",{parentName:"ul"},"Raw NDVI as tiff"),Object(l.b)("li",{parentName:"ul"},"All bands as tiff.")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Check the ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://docs.withleaf.io/docs/crop_monitoring_overview#providers"}),"comparison page")," to identify the resolution and bands available for each provider.")),Object(l.b)("p",null,"It is possible to filter the results by a number of different parameters:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"startDate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve images taken after this day"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"endDate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve images taken until this day"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"startProcessedTimestamp"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve images processed by Leaf after this day"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"endProcessedTimestamp"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve images processed by Leaf until this day"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"maxClouds"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"double between 0.0 and 100.0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filter processes with clouds less than or equal to this percentage"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"minCoverage"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"double between 0.0 and 100.0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filter processes with coverage greater than or equal to this percentage"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0.0")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"status"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "SUCCESS", "FAILED" or "STARTED"'),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve images with selected status"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SUCCESS")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"page"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"page being fetched"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"size"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"integer"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"how many processes (sets of all images) to return per page"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"provider"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"array of string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sentinel or/and planet"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If none is defined, it will created with ",Object(l.b)("em",{parentName:"td"},"sentinel")," only")))),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Important")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"If you have just created the satellite field, it may take a moment time for the images to become available."))),Object(l.b)("h4",{id:"request-examples-2"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://api.withleaf.io/services/satellite/api' +\n               '/fields/{id}/processes'\n\nconst params = { startDate: '2020-06-03', endDate: '2020-06-10' }\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers, params })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = ('https://api.withleaf.io/services/satellite/api'\n            '/fields/{id}/processes')\n\nparams = {'startDate': '2020-06-03', 'endDate': '2020-06-10'}\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers, params=params)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    --header 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields/{id}/processes?startDate=2020-06-03&endDate=2020-06-10'\n")))),Object(l.b)("h4",{id:"response-2"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": 0,\n    "date": "2020-06-03T19:03:57.882Z",\n    "clouds": 0, \n    "provider": "sentinel",\n    "bucketName": "sentinel-s2-l2a",\n    "bucketKey": "tiles/10/S/FH/2020/6/3/0",\n    "bucketRegion": "eu-central-1",\n    "status": "SUCCESS",\n    "coverage": 100,\n    "images": [\n      {\n          "url": "URL",\n          "downloadUrl": "URL",\n          "type": "tif",\n          "resolution": 20\n      },\n      ....\n    ],\n    "processedTimestamp": "2020-06-03T19:03:58.881731Z"\n  },\n  ....\n]\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"date"),": the date of the satellite image"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"clouds"),": cloud coverage percentage of the field, from 0 to 100"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"provider"),": the satellite provider (sentinel or planet) from where this process was created."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bucketName"),": name of satellite image bucket where the original tile is. Usually\n",Object(l.b)("inlineCode",{parentName:"li"},"sentinel-s2-l2a")," or ",Object(l.b)("inlineCode",{parentName:"li"},"leaf-planet-images-prd")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bucketRegion"),": AWS region of original image's bucket. Usually ",Object(l.b)("inlineCode",{parentName:"li"},"eu-central-1")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bucketKey"),": base path of original satellite image"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"status"),": status of the process. It will be either ",Object(l.b)("inlineCode",{parentName:"li"},"SUCCESS")," or ",Object(l.b)("inlineCode",{parentName:"li"},"FAILURE")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"coverage"),": data coverage percentage of the field, from 0 to 100"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"images"),": each image in this list will have the following data:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"url"),": URL of the image"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"downloadUrl"),": URL of the image"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"type"),": the type of the image. One of ",Object(l.b)("inlineCode",{parentName:"li"},"tif"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ndvi"),", ",Object(l.b)("inlineCode",{parentName:"li"},"png")," and\n",Object(l.b)("inlineCode",{parentName:"li"},"tif_colorized")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"resolution"),": resolution, in meters, of the image. See table below"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"processedTimestamp"),": the timestamp of when the process was processed")),Object(l.b)("h3",{id:"get-an-image-of-satellite-field"},"Get an image of satellite field"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}/processes/{id}")),Object(l.b)("p",null,"Returns a single process for the field."),Object(l.b)("h4",{id:"request-examples-3"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://api.withleaf.io/services/satellite/api/fields/{id}/processes/{id}'\n\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = ('https://api.withleaf.io/services/satellite/api/fields/{id}/processes/{id}')\n\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    --header 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields/{id}/processes/{id}'\n")))),Object(l.b)("h4",{id:"response-3"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": 0,\n  "date": "2020-06-03T19:03:57.882Z",\n  "clouds": 0,\n  "provider": "sentinel",\n  "bucketName": "sentinel-s2-l2a",\n  "bucketKey": "tiles/10/S/FH/2020/6/3/0",\n  "bucketRegion": "eu-central-1",\n  "status": "SUCCESS",\n  "coverage": 100,\n  "images": [\n    {\n      "url": "URL",\n      "downloadUrl": "URL",\n      "type": "tif",\n      "resolution": 20\n    },\n    # etc...\n  ],\n  "processedTimestamp": "2020-06-03T19:03:58.881731Z"\n}\n')),Object(l.b)("h3",{id:"create-a-satellite-field"},"Create a satellite field"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--warning"},"POST")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields")),Object(l.b)("p",null,"Creates a new field."),Object(l.b)("p",null,"It will be continuously monitored forever, and new images will arrive based on the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/crop_monitoring_overview#providers"}),"provider selected"),",\nbecause each one of them has a different temporal resolution (time it takes for the satellite to go over the same field when orbiting\nthe Earth). If you don't need the field anymore, you can\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/crop_monitoring_endpoints#delete-fieldsid"}),"delete the field.")),Object(l.b)("div",{className:"admonition admonition-success alert alert--success"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Note")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"By default, Leaf will return images for your field from the last\n30 days (from the moment you create the field)."),Object(l.b)("p",{parentName:"div"},'You can change that by including a "startDate" or a "daysBefore" to the body'))),Object(l.b)("p",null,"There are two ways you can do that:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"set a ",Object(l.b)("inlineCode",{parentName:"li"},"startDate"),' (ISO, "yyyy-mm-dd") meaning Leaf will\nreturn all images for your field since this date.  '),Object(l.b)("li",{parentName:"ol"},"set how many ",Object(l.b)("inlineCode",{parentName:"li"},"daysBefore")," (an integer greater than or equal to 0) you\nwant to get images from.")),Object(l.b)("p",null,"Note that they are both ",Object(l.b)("em",{parentName:"p"},"optional"),", but you can ",Object(l.b)("strong",{parentName:"p"},"not")," specify both."),Object(l.b)("p",null,"Now let's see the Payload"),Object(l.b)("h4",{id:"request-body"},"Request body"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "externalId": "yourSatelliteFieldId",\n  "startDate": "2019-01-01", \n  "providers": [\n    "planet"\n  ],\n  "assetTypes": [\n    "ortho_analytic_8b_sr"\n  ],\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [...]\n  }\n}\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"externalId"),": external ID used in the field's registration."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the field."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"providers"),": Specify the satellite imagery source, if none is specified, Sentinel images will be retrived by default."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"assetTypes"),": If the ",Object(l.b)("inlineCode",{parentName:"li"},"providers")," property contains ",Object(l.b)("inlineCode",{parentName:"li"},"planet")," you can select which ",Object(l.b)("inlineCode",{parentName:"li"},"assetType")," will be retrived, which can be ",Object(l.b)("strong",{parentName:"li"},"more than one"),". The available values are ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_analytic_8b_sr"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_analytic_8b"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_analytic_8b_xml"),", ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_visual")," and ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_udm2"),". The default value is ",Object(l.b)("inlineCode",{parentName:"li"},"ortho_analytic_8b_sr"),".")),Object(l.b)("h4",{id:"request-examples-4"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://api.withleaf.io/services/satellite/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = { /* Your payload */ }\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/satellite/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\npayload = {...}  # Payload\n\nresponse = requests.post(endpoint, headers=headers, json=payload)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ your payload }' \\\n    'https://api.withleaf.io/services/satellite/api/fields'\n")))),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"field size limit")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("ul",{parentName:"div"},Object(l.b)("li",{parentName:"ul"},"the field cannot be larger than 50k hectares (123k acres) and"),Object(l.b)("li",{parentName:"ul"},"cannot have a perimeter bigger than 300km (180 miles).")))),Object(l.b)("h4",{id:"sample-geometry"},"Sample geometry"),Object(l.b)("p",null,"If you are looking for a geometry for testing purposes you can use this one."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'{\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [\n      [[[ -48.95275447, -22.49608],\n          [ -48.95379286, -22.49675703],\n          [ -48.9591836, -22.50310243],\n          [ -48.96225525, -22.5067235],\n          [ -48.94852019, -22.50648371],\n          [ -48.94780839, -22.49693998],\n          [ -48.95275447, -22.49608]\n        ]]]\n  }\n}\n')),Object(l.b)("h4",{id:"restrictions"},"Restrictions"),Object(l.b)("p",null,"The satellite field creation will fail if the geometry doesn't fit the Planet requirements listed below:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The geometry must be valid, it cannot have self-intersection, for example;"),Object(l.b)("li",{parentName:"ul"},"The smallest possible area for each inner ring is 1 m\xb2;"),Object(l.b)("li",{parentName:"ul"},"The maximum number of vertices allowed is 1,500 vertices.")),Object(l.b)("h3",{id:"delete-a-satellite-field"},"Delete a satellite field"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--danger"},"DELETE"),"  ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}")),Object(l.b)("p",null,"Deletes the field from our database."),Object(l.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Note that the field deletion is irreversible and all images will be lost."))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"(But you can always create a new field and get images from the past, as far\nas you want).")),Object(l.b)("h4",{id:"request-examples-5"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\n\nconst TOKEN = 'YOUR_TOKEN'\n\nconst client = axios.create({\n  baseURL: 'https://api.withleaf.io',\n  headers: {'Authorization': `Bearer ${TOKEN}`}\n})\n\nclient.delete('/fields/{id}')\n  .then(res => console.log(res.statusCode))\n  .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/satellite/api/fields/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.delete(endpoint, headers=headers)\nprint(response)\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X DELETE \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields/{id}'\n")))),Object(l.b)("h3",{id:"get-subscription-for-planet"},"Get subscription for Planet"),Object(l.b)("p",null,"\xa0"," ",Object(l.b)("span",{class:"badge badge--success"},"GET")," ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}/subscription")),Object(l.b)("p",null,"Get the subscription from Planet. It returns the assetTypes, itemTypes and startDate for a field."),Object(l.b)("h4",{id:"request-examples-6"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://api.withleaf.io/services/satellite/api/fields/{id}/subscription'\n\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = ('https://api.withleaf.io/services/satellite/api/fields/{id}/subscription')\n\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    --header 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/satellite/api/fields/{id}/subscription'\n")))),Object(l.b)("h4",{id:"response-4"},"Response"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "planetAssetTypes": [\n    "ortho_analytic_8b_sr",\n    "ortho_udm2"\n  ],\n  "planetItemTypes": [\n    "PSScene"\n  ],\n  "startDate": "2023-04-09T00:00:00Z"\n}\n')),Object(l.b)("h3",{id:"reprocess-satellite-images"},"Reprocess satellite images"),Object(l.b)("p",null,"\xa0",Object(l.b)("span",{class:"badge badge--warning"},"POST"),"  ",Object(l.b)("inlineCode",{parentName:"p"},"/fields/{id}/process/{id}/reprocess")),Object(l.b)("p",null,"Allows reprocessing the satellite images based on a ",Object(l.b)("inlineCode",{parentName:"p"},"processId"),"."),Object(l.b)("h4",{id:"request-examples-7"},"Request examples"),Object(l.b)(r.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/fields/{id}/process/{id}/reprocess'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.post(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(l.b)(s.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/fields/{id}/process/{id}/reprocess'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.post(endpoint, headers=headers)\nprint(response.json())\n"))),Object(l.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/fields/{id}/process/{id}/reprocess'\n")))),Object(l.b)("h2",{id:"alerts"},"Alerts"),Object(l.b)("p",null,"With Alerts you can be notified when something happens or changes instead of needing to repeatedly query for changes.\nLeaf Alerts support events that happen within Leaf and events that happen within supported 3rd party software. "),Object(l.b)("h3",{id:"list-of-crop-monitoring-events"},"List of Crop Monitoring Events"),Object(l.b)("p",null,"Leaf Crop Monitoring Service can Alert you on these events: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/alerts_events#satellite-events"}),"list of Crop Monitoring Events")))}d.isMDXComponent=!0},158:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return O}));var n=a(0),i=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=i.a.createContext({}),o=function(e){var t=i.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=o(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,r=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=o(a),u=n,O=p["".concat(r,".").concat(u)]||p[u]||d[u]||l;return a?i.a.createElement(O,s(s({ref:t},c),{},{components:a})):i.a.createElement(O,s({ref:t},c))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=u;var s={};for(var b in t)hasOwnProperty.call(t,b)&&(s[b]=t[b]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var c=2;c<l;c++)r[c]=a[c];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},159:function(e,t,a){"use strict";var n=a(0),i=a(20);t.a=function(){var e=Object(n.useContext)(i.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},160:function(e,t,a){"use strict";function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}},161:function(e,t,a){"use strict";a.d(t,"b",(function(){return l})),a.d(t,"a",(function(){return r}));var n=a(159),i=a(162);function l(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,l=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var l=void 0===n?{}:n,r=l.forcePrependBaseUrl,s=void 0!==r&&r,b=l.absolute,c=void 0!==b&&b;if(!a)return a;if(a.startsWith("#"))return a;if(Object(i.b)(a))return a;if(s)return t+a;var o=!a.startsWith(t)?t+a.replace(/^\//,""):a;return c?e+o:o}(l,a,e,t)}}}function r(e,t){return void 0===t&&(t={}),(0,l().withBaseUrl)(e,t)}},162:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return i}))},163:function(e,t,a){"use strict";var n=a(0),i=Object(n.createContext)(void 0);t.a=i},164:function(e,t,a){"use strict";var n=a(0),i=a(163);t.a=function(){var e=Object(n.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},165:function(e,t,a){"use strict";var n=a(0),i=a.n(n),l=a(164),r=a(160),s=a(48),b=a.n(s),c=37,o=39;t.a=function(e){var t=e.block,a=e.children,s=e.defaultValue,p=e.values,d=e.groupId,u=Object(l.a)(),O=u.tabGroupChoices,m=u.setTabGroupChoices,j=Object(n.useState)(s),h=j[0],f=j[1],g=Object(n.useState)(!1),N=g[0],v=g[1];if(null!=d){var y=O[d];null!=y&&y!==h&&p.some((function(e){return e.value===y}))&&f(y)}var T=function(e){f(e),null!=d&&m(d,e)},w=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},x=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",x)}),[]),i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(r.a)("tabs__item",b.a.tabItem,{"tabs__item--active":h===t}),style:N?{}:{outline:"none"},key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case o:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e),E(e)},onFocus:function(){return T(t)},onClick:function(){T(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},166:function(e,t,a){"use strict";var n=a(0),i=a.n(n);t.a=function(e){return i.a.createElement("div",null,e.children)}}}]);