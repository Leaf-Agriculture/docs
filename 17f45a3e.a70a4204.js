(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{156:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),b=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=b(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=b(t),d=a,f=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return t?r.a.createElement(f,s(s({ref:n},l),{},{components:t})):r.a.createElement(f,s({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},157:function(e,n,t){"use strict";var a=t(0),r=t(20);n.a=function(){var e=Object(a.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},158:function(e,n,t){"use strict";function a(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}n.a=function(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(r&&(r+=" "),r+=n);return r}},159:function(e,n,t){"use strict";t.d(n,"b",(function(){return o})),t.d(n,"a",(function(){return i}));var a=t(157),r=t(160);function o(){var e=Object(a.a)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,o=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,a){var o=void 0===a?{}:a,i=o.forcePrependBaseUrl,s=void 0!==i&&i,c=o.absolute,l=void 0!==c&&c;if(!t)return t;if(t.startsWith("#"))return t;if(Object(r.b)(t))return t;if(s)return n+t;var b=!t.startsWith(n)?n+t.replace(/^\//,""):t;return l?e+b:b}(o,t,e,n)}}}function i(e,n){return void 0===n&&(n={}),(0,o().withBaseUrl)(e,n)}},160:function(e,n,t){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}t.d(n,"b",(function(){return a})),t.d(n,"a",(function(){return r}))},161:function(e,n,t){"use strict";var a=t(0),r=Object(a.createContext)(void 0);n.a=r},162:function(e,n,t){"use strict";var a=t(0),r=t(161);n.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},163:function(e,n,t){"use strict";var a=t(0),r=t.n(a),o=t(162),i=t(158),s=t(48),c=t.n(s),l=37,b=39;n.a=function(e){var n=e.block,t=e.children,s=e.defaultValue,u=e.values,p=e.groupId,d=Object(o.a)(),f=d.tabGroupChoices,O=d.setTabGroupChoices,g=Object(a.useState)(s),j=g[0],m=g[1],h=Object(a.useState)(!1),N=h[0],v=h[1];if(null!=p){var E=f[p];null!=E&&E!==j&&u.some((function(e){return e.value===E}))&&m(E)}var T=function(e){m(e),null!=p&&O(p,e)},y=[],A=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},U=function(){v(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",A),window.addEventListener("mousedown",U)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n})},u.map((function(e){var n=e.value,t=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===n,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":j===n}),style:N?{}:{outline:"none"},key:n,ref:function(e){return y.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case b:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(y,e.target,e),A(e)},onFocus:function(){return T(n)},onClick:function(){T(n),v(!1)},onPointerDown:function(){return v(!1)}},t)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter((function(e){return e.props.value===j}))[0]))}},164:function(e,n,t){"use strict";var a=t(0),r=t.n(a);n.a=function(e){return r.a.createElement("div",null,e.children)}},66:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return p}));var a=t(2),r=t(6),o=(t(0),t(156)),i=t(163),s=t(164),c=(t(159),{title:"Configurations Endpoints",description:"Configurations - Endpoints",sidebar_label:"Endpoints"}),l={unversionedId:"configurations_endpoints",id:"configurations_endpoints",isDocsHomePage:!1,title:"Configurations Endpoints",description:"Configurations - Endpoints",source:"@site/docs/configurations_endpoints.md",permalink:"/docs/docs/configurations_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/configurations_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Configurations Overview",permalink:"/docs/docs/configurations_overview"},next:{title:"Alerts Overview",permalink:"/docs/docs/alerts_overview"}},b=[{value:"About",id:"about",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"Get API Owner&#39;s Configuration",id:"get-api-owners-configuration",children:[]},{value:"Get Leaf User&#39;s Configuration",id:"get-leaf-users-configuration",children:[]},{value:"Create Leaf User&#39;s Configuration",id:"create-leaf-users-configuration",children:[]},{value:"Update API Owner&#39;s Configuration",id:"update-api-owners-configuration",children:[]},{value:"Update Leaf User&#39;s Configuration",id:"update-leaf-users-configuration",children:[]},{value:"Delete Leaf User&#39;s Configuration",id:"delete-leaf-users-configuration",children:[]}]}],u={rightToc:b};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"about"},"About"),Object(o.b)("p",null,"Here we list all the available endpoints from Leaf's Configuration API. To call them easily, we recommend using ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"Leaf's Postman collection"),"."),Object(o.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/config/api\n")),Object(o.b)("p",null,"This service has the following endpoints available:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#get-api-owners-configuration"}),"Get API Owner's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--success"},"GET")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#get-leaf-users-configuration"}),"Get Leaf User's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--success"},"GET")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs/{leafUserId}"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#create-leaf-users-configuration"}),"Create Leaf User's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--warning"},"POST")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs/{leafUserId}"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#update-api-owners-configuration"}),"Update API Owner's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--warning"},"PATCH")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#update-leaf-users-configuration"}),"Update Leaf User's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--warning"},"PATCH")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs/{leafUserId}"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"#delete-leaf-users-configuration"}),"Delete Leaf User's Configuration")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(o.b)("inlineCode",{parentName:"td"},"/configs/{leafUserId}"))))),Object(o.b)("h2",{id:"endpoints"},"Endpoints"),Object(o.b)("h3",{id:"get-api-owners-configuration"},"Get API Owner's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--success"},"GET")," ",Object(o.b)("inlineCode",{parentName:"p"},"/configs")),Object(o.b)("p",null,"Gets the configuration of the API Owner."),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\n\nconst endpoint = "https://api.withleaf.io/services/config/api/configs";\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\naxios\n  .get(endpoint, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/config/api/configs'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN=YOUR_TOKEN\n\ncurl -X GET \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    "https://api.withleaf.io/services/config/api/configs"\n')))),Object(o.b)("h4",{id:"response"},"Response"),Object(o.b)("p",null,"A JSON containing the configuration of the API Owner."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "apiOwnerUsername": "api-owner",\n  "leafUserId": "",\n  "operationsImageCreation": true,\n  "geoimagesResolution": 0.00001,\n  "geoimagesShape": "SQUARE",\n  "geoimagesProjection": "EPSG:3857",\n  "geoimagesColorRamp": {\n    "0%": [200, 0, 0],\n    "35%": [255, 40, 0],\n    "45%": [255, 150, 0],\n    "55%": [255, 240, 0],\n    "65%": [0, 230, 0],\n    "75%": [0, 190, 0],\n    "100%": [0, 130, 0],\n    "nv": [0, 0, 0, 0]\n  },\n  "fieldsAutoSync": true,\n  "fieldsMergeIntersection": 0.01,\n  "fieldsAttachIntersection": 0.01\n}\n')),Object(o.b)("h3",{id:"get-leaf-users-configuration"},"Get Leaf User's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--success"},"GET")," ",Object(o.b)("inlineCode",{parentName:"p"},"configs/{leafUserId}")),Object(o.b)("p",null,"Gets the configuration of a Leaf User."),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\nconst LEAF_USER_ID = "00000000-0000-0000-0000-000000000000";\n\nconst endpoint = `https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}`;\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\naxios\n  .get(endpoint, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nLEAF_USER_ID = '00000000-0000-0000-0000-000000000000'\n\nendpoint = f'https://api.withleaf.io/services/config/api/configs/{LEAF_USER_ID}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN=YOUR_TOKEN\nLEAF_USER_ID=00000000-0000-0000-0000-000000000000\n\ncurl -X GET \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    "https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}"\n')))),Object(o.b)("h4",{id:"response-1"},"Response"),Object(o.b)("p",null,"A JSON containing the configuration of the Leaf User."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "apiOwnerUsername": "api-owner",\n  "leafUserId": "00000000-0000-0000-0000-000000000000",\n  "operationsImageCreation": true,\n  "geoimagesResolution": 0.00001,\n  "geoimagesShape": "SQUARE",\n  "geoimagesProjection": "EPSG:3857",\n  "geoimagesColorRamp": {\n    "0%": [200, 0, 0],\n    "35%": [255, 40, 0],\n    "45%": [255, 150, 0],\n    "55%": [255, 240, 0],\n    "65%": [0, 230, 0],\n    "75%": [0, 190, 0],\n    "100%": [0, 130, 0],\n    "nv": [0, 0, 0, 0]\n  },\n  "fieldsAutoSync": true,\n  "fieldsMergeIntersection": 0.01,\n  "fieldsAttachIntersection": 0.01,\n  "fieldsAutoMerge": true\n}\n')),Object(o.b)("h3",{id:"create-leaf-users-configuration"},"Create Leaf User's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--warning"},"POST")," ",Object(o.b)("inlineCode",{parentName:"p"},"/configs/{leafUserId}")),Object(o.b)("p",null,"Creates the Configuration for the Leaf User ",Object(o.b)("inlineCode",{parentName:"p"},"leafUserId"),". A request body must be provided\ncontaining the configurations to be set. All entries are optional, any missing configuration will be inherited from the API Owner's Configuration."),Object(o.b)("p",null,"Request body example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationsImageCreation": true,\n  "fieldsAutoSync": true\n}\n')),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\nconst LEAF_USER_ID = "00000000-0000-0000-0000-000000000000";\n\nconst endpoint = `https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}`;\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\nconst data = {\n  operationsImageCreation: true,\n  fieldsAutoSync: true,\n};\n\naxios\n  .post(endpoint, data, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nLEAF_USER_ID = '00000000-0000-0000-0000-000000000000'\n\nendpoint = f'https://api.withleaf.io/services/config/api/configs/{LEAF_USER_ID}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'operationsImageCreation': True,\n  'fieldsAutoSync': True\n}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN=YOUR_TOKEN\nLEAF_USER_ID=00000000-0000-0000-0000-000000000000\n\ncurl -X POST \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    -H "Content-Type: application/json" \\\n    -d \'{ "operationsImageCreation": true, "fieldsAutoSync": true }\' \\\n    "https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}"\n')))),Object(o.b)("h4",{id:"response-2"},"Response"),Object(o.b)("p",null,"A JSON containing the configuration of the Leaf User."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "apiOwnerUsername": "api-owner",\n  "leafUserId": "00000000-0000-0000-0000-000000000000",\n  "operationsImageCreation": true,\n  "geoimagesResolution": 0.00001,\n  "geoimagesShape": "SQUARE",\n  "geoimagesProjection": "EPSG:3857",\n  "geoimagesColorRamp": {\n    "0%": [200, 0, 0],\n    "35%": [255, 40, 0],\n    "45%": [255, 150, 0],\n    "55%": [255, 240, 0],\n    "65%": [0, 230, 0],\n    "75%": [0, 190, 0],\n    "100%": [0, 130, 0],\n    "nv": [0, 0, 0, 0]\n  },\n  "fieldsAutoSync": true,\n  "fieldsMergeIntersection": 0.01,\n  "fieldsAttachIntersection": 0.01,\n  "fieldsAutoMerge": true\n}\n')),Object(o.b)("h3",{id:"update-api-owners-configuration"},"Update API Owner's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--warning"},"PATCH")," ",Object(o.b)("inlineCode",{parentName:"p"},"/configs")),Object(o.b)("p",null,"Updates the specified fields of Configuration for the API Owner. A request body must be provided\ncontaining the configurations to be set. All entries are optional."),Object(o.b)("p",null,"Request body example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationsImageCreation": true,\n  "fieldsAutoSync": true\n}\n')),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\n\nconst endpoint = "https://api.withleaf.io/services/config/api/configs";\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\nconst data = {\n  operationsImageCreation: true,\n  fieldsAutoSync: true,\n};\n\naxios\n  .patch(endpoint, data, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/config/api/configs'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'operationsImageCreation': True,\n  'fieldsAutoSync': True\n}\n\nresponse = requests.patch(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN = \'YOUR_TOKEN\'\n\ncurl -X PATCH \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    -H "Content-Type: application/json" \\\n    -d \'{ "operationsImageCreation": true, "fieldsAutoSync": true }\' \\\n    \'https://api.withleaf.io/services/config/api/configs\'\n')))),Object(o.b)("h4",{id:"response-3"},"Response"),Object(o.b)("p",null,"A JSON containing the configuration of the API Owner."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "apiOwnerUsername": "api-owner",\n  "leafUserId": "",\n  "operationsImageCreation": true,\n  "geoimagesResolution": 0.00001,\n  "geoimagesShape": "SQUARE",\n  "geoimagesProjection": "EPSG:3857",\n  "geoimagesColorRamp": {\n    "0%": [200, 0, 0],\n    "35%": [255, 40, 0],\n    "45%": [255, 150, 0],\n    "55%": [255, 240, 0],\n    "65%": [0, 230, 0],\n    "75%": [0, 190, 0],\n    "100%": [0, 130, 0],\n    "nv": [0, 0, 0, 0]\n  },\n  "fieldsAutoSync": true,\n  "fieldsMergeIntersection": 0.01,\n  "fieldsAttachIntersection": 0.01,\n  "fieldsAutoMerge": true\n}\n')),Object(o.b)("h3",{id:"update-leaf-users-configuration"},"Update Leaf User's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--warning"},"PATCH")," ",Object(o.b)("inlineCode",{parentName:"p"},"/configs/{leafUserId}")),Object(o.b)("p",null,"Updates the specified fields of Configuration for the Leaf User ",Object(o.b)("inlineCode",{parentName:"p"},"leafUserId"),". A resquest body must be provided containing the configurations to be set. All entries are optional."),Object(o.b)("p",null,"Request body example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "operationsImageCreation": true,\n  "fieldsAutoSync": true\n}\n')),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\nconst LEAF_USER_ID = "00000000-0000-0000-0000-000000000000";\n\nconst endpoint = `https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}`;\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\nconst data = {\n  operationsImageCreation: true,\n  fieldsAutoSync: true,\n};\n\naxios\n  .patch(endpoint, data, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nLEAF_USER_ID = '00000000-0000-0000-0000-000000000000'\n\nendpoint = f'https://api.withleaf.io/services/config/api/configs/{LEAF_USER_ID}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'operationsImageCreation': True,\n  'fieldsAutoSync': True\n}\n\nresponse = requests.patch(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN=YOUR_TOKEN\nLEAF_USER_ID=00000000-0000-0000-0000-000000000000\n\ncurl -X PATCH \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    -H "Content-Type: application/json" \\\n    -d \'{ "operationsImageCreation": true, "fieldsAutoSync": true }\' \\\n    "https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}"\n')))),Object(o.b)("h4",{id:"response-4"},"Response"),Object(o.b)("p",null,"A JSON containing the configuration of the Leaf User."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "apiOwnerUsername": "api-owner",\n  "leafUserId": "00000000-0000-0000-0000-000000000000",\n  "operationsImageCreation": true,\n  "geoimagesResolution": 0.00001,\n  "geoimagesShape": "SQUARE",\n  "geoimagesProjection": "EPSG:3857",\n  "geoimagesColorRamp": {\n    "0%": [200, 0, 0],\n    "35%": [255, 40, 0],\n    "45%": [255, 150, 0],\n    "55%": [255, 240, 0],\n    "65%": [0, 230, 0],\n    "75%": [0, 190, 0],\n    "100%": [0, 130, 0],\n    "nv": [0, 0, 0, 0]\n  },\n  "fieldsAutoSync": true,\n  "fieldsMergeIntersection": 0.01,\n  "fieldsAttachIntersection": 0.01,\n  "fieldsAutoMerge": true\n}\n')),Object(o.b)("h3",{id:"delete-leaf-users-configuration"},"Delete Leaf User's Configuration"),Object(o.b)("p",null,"\xa0",Object(o.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(o.b)("inlineCode",{parentName:"p"},"/configs/{leafUserId}")),Object(o.b)("p",null,"Deletes the Configuration from the Leaf User ",Object(o.b)("inlineCode",{parentName:"p"},"leafUserId"),". Until a new Configuration is created, the Leaf User will inherit all configurations from the API Owner."),Object(o.b)(i.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const axios = require("axios");\nconst TOKEN = "YOUR_TOKEN";\nconst LEAF_USER_ID = "00000000-0000-0000-0000-000000000000";\n\nconst endpoint = `https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}`;\nconst headers = { Authorization: `Bearer ${TOKEN}` };\n\naxios\n  .delete(endpoint, { headers })\n  .then((res) => console.log(res.data))\n  .catch(console.error);\n'))),Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nLEAF_USER_ID = '00000000-0000-0000-0000-000000000000'\n\nendpoint = f'https://api.withleaf.io/services/config/api/configs/{LEAF_USER_ID}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.delete(endpoint, headers=headers)\nprint(response.status_code)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'TOKEN=YOUR_TOKEN\nLEAF_USER_ID=00000000-0000-0000-0000-000000000000\n\ncurl -X DELETE \\\n    -H "Authorization: Bearer ${TOKEN}" \\\n    "https://api.withleaf.io/services/config/api/configs/${LEAF_USER_ID}"\n')))))}p.isMDXComponent=!0}}]);