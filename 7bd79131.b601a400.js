(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{107:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(2),s=a(6),r=(a(0),a(158)),o=a(165),i=a(166),p=(a(161),{title:"Field Operations Endpoints",description:"Field Operations - Endpoints",sidebar_label:"Endpoints"}),b={unversionedId:"operations_endpoints",id:"operations_endpoints",isDocsHomePage:!1,title:"Field Operations Endpoints",description:"Field Operations - Endpoints",source:"@site/docs/operations_endpoints.md",permalink:"/docs/docs/operations_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/operations_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Field Operations Overview",permalink:"/docs/docs/operations_overview"},next:{title:"Field Operations sample responses",permalink:"/docs/docs/operations_sample_output"}},c=[{value:"About",id:"about",children:[{value:"Get all operations",id:"get-all-operations",children:[]},{value:"Get an operation",id:"get-an-operation",children:[]},{value:"Get the operation&#39;s summary",id:"get-the-operations-summary",children:[]},{value:"Get the operation&#39;s standardGeojson",id:"get-the-operations-standardgeojson",children:[]},{value:"Get the operation&#39;s standardGeoparquet",id:"get-the-operations-standardgeoparquet",children:[]},{value:"Get the operation&#39;s filteredGeojson",id:"get-the-operations-filteredgeojson",children:[]},{value:"Get the operation&#39;s filteredGeoparquet",id:"get-the-operations-filteredgeoparquet",children:[]},{value:"Get operation&#39;s images",id:"get-operations-images",children:[]},{value:"Get operation&#39;s images V2",id:"get-operations-images-v2",children:[]},{value:"Get operation&#39;s geotiff images",id:"get-operations-geotiff-images",children:[]},{value:"Get the operation&#39;s units",id:"get-the-operations-units",children:[]},{value:"Get the operation&#39;s machines",id:"get-the-operations-machines",children:[]},{value:"Get the operation&#39;s implements",id:"get-the-operations-implements",children:[]},{value:"Get the operation&#39;s operators",id:"get-the-operations-operators",children:[]},{value:"Get the operation&#39;s sessions",id:"get-the-operations-sessions",children:[]},{value:"Crop operation by field",id:"crop-operation-by-field",children:[]},{value:"Get files from an operation",id:"get-files-from-an-operation",children:[]},{value:"Reprocess an operation",id:"reprocess-an-operation",children:[]}]},{value:"Alerts",id:"alerts",children:[{value:"List of Operations Events",id:"list-of-operations-events",children:[]}]}],l={rightToc:c};function d(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"[files_sample]",": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_sample_output#machine-file-sample%5D"}),"https://docs.withleaf.io/docs/machine_file_conversion_sample_output#machine-file-sample]")),Object(r.b)("h2",{id:"about"},"About"),Object(r.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/operations/api\n")),Object(r.b)("p",null,"This service has the following endpoints available:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-operations"}),"Get all operations")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-an-operation"}),"Get an operation")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-summary"}),"Get the operation's summary")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/summary"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-standardgeojson"}),"Get the operation's standardGeojson")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/standardGeojson"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-standardgeoparquet"}),"Get the operation's standardGeoParquet")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/standardGeoparquet"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-filteredgeojson"}),"Get the operation's filteredGeojson")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/filteredGeojson"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-filteredgeoparquet"}),"Get the operation's filteredGeoParquet")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/filteredGeoparquet"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-operations-images"}),"Get operation's images")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/images"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-operations-images-v2"}),"Get operation's images V2")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/imagesV2"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-operations-geotiff-images"}),"Get operation's geotiff images")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/geotiffImages"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-units"}),"Get the operation's units")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/units"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-machines"}),"Get the operation's machines")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/machines"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-implements"}),"Get the operation's implements")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/implements"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-operators"}),"Get the operation's operators")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/operators"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-the-operations-sessions"}),"Get the operation's sessions")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/sessions"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#crop-operation-by-field"}),"Crop operation by field")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--warning"},"POST")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/cropOperationByField"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#reprocess-an-operation"}),"Reprocess an operation")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--warning"},"POST")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/reprocess"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#get-files-from-an-operation"}),"Get files from an operation")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("span",{class:"badge badge--success"},"GET")," ",Object(r.b)("inlineCode",{parentName:"td"},"/operations/{id}/files"))))),Object(r.b)("p",null,"For easily testing these endpoints, we recommend using our Postman ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-API-Postman-Collection"}),"collection"),"."),Object(r.b)("h3",{id:"get-all-operations"},"Get all operations"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations")),Object(r.b)("p",null,"Gets a paged list of operations that belong to the current logged in user. It is\npossible to filter the results by passing some query parameters. They are listed\nbelow."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Values"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"leafUserId")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"uuid of one of your users")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"provider")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"CNHI"),", ",Object(r.b)("inlineCode",{parentName:"td"},"JohnDeere"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Trimble"),", ",Object(r.b)("inlineCode",{parentName:"td"},"ClimateFieldView"),", ",Object(r.b)("inlineCode",{parentName:"td"},"AgLeader"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Stara")," or ",Object(r.b)("inlineCode",{parentName:"td"},"Leaf"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"startTime")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"updatedTime")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the updatedTime onward")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"endTime")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"operationType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"applied"),", ",Object(r.b)("inlineCode",{parentName:"td"},"planted"),", ",Object(r.b)("inlineCode",{parentName:"td"},"harvested")," or ",Object(r.b)("inlineCode",{parentName:"td"},"tillage"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldId")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the field where the operation happened")))),Object(r.b)("p",null,"You can also pass some parameters used exclusively for paging through results.\nThey are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched (default is 0)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (max is 100)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"sort"),", the sorting order of the results; can be multi-value, where the first value to be passed will have preference in ordering over the next ones; you can also specify the order as ",Object(r.b)("inlineCode",{parentName:"li"},"asc")," or ",Object(r.b)("inlineCode",{parentName:"li"},"desc")," with ",Object(r.b)("inlineCode",{parentName:"li"},"asc")," being the default. Example: id, desc",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Valid values for sorting are: id, leafUserId, startTime, endTime, type and updatedTime.")))),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"the default value for page size is 20")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If the parameters page and size are not set, the endpoint will return 20 results."))),Object(r.b)("h4",{id:"request-examples"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations'\n")))),Object(r.b)("h4",{id:"response"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "5c8fdb34-4dc4-4b96-bfd5-53e6206ce971",\n    "apiOwnerUsername": "test",\n    "leafUserId": "7494c90e-28b8-4bb2-9ede-95c1cc894349",\n    "startTime": "2015-04-18T19:31:27Z",\n    "endTime": "2015-04-18T19:58:50Z",\n    "updatedTime": "2021-08-24T16:00:15.062Z",\n    "type": "planted",\n    "files": [\n        "a10b85c2-ac2e-4b0f-8e65-74edbd2ca53e",\n        "759e1b62-dc69-4332-b618-6449a37470fa"\n    ],\n    "fields": [\n      {\n        "id": "0071484f-4a75-4190-9fd0-f5995d241c2c"\n      }\n    ],\n    "providers": [\n      "providerName"\n    ]\n  },\n  ....\n]\n')),Object(r.b)("h3",{id:"get-an-operation"},"Get an operation"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}")),Object(r.b)("p",null,"Gets a single operation by its id."),Object(r.b)("h4",{id:"request-examples-1"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}'\n")))),Object(r.b)("h4",{id:"response-1"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "5c8fdb34-4dc4-4b96-bfd5-53e6206ce971",\n  "apiOwnerUsername": "test",\n  "leafUserId": "7494c90e-28b8-4bb2-9ede-95c1cc894349",\n  "startTime": "2015-04-18T19:31:27Z",\n  "endTime": "2015-04-18T19:58:50Z",\n  "updatedTime": "2021-08-24T16:00:15.062Z",\n  "type": "planted",\n  "files": [\n      "a10b85c2-ac2e-4b0f-8e65-74edbd2ca53e",\n      "759e1b62-dc69-4332-b618-6449a37470fa"\n  ],\n  "fields": [\n    {\n      "id": "0071484f-4a75-4190-9fd0-f5995d241c2c"\n    }\n  ],\n  "providers": [\n    "providerName"\n  ]\n}\n')),Object(r.b)("h3",{id:"get-the-operations-summary"},"Get the operation's summary"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/summary")),Object(r.b)("p",null,"Gets the summary, if available, for the operation id."),Object(r.b)("h4",{id:"request-examples-2"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/summary'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/summary'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/summary'\n")))),Object(r.b)("h4",{id:"response-2"},"Response"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output#field-operations-summary"}),"Here's a link with sample responses"),' for "planted", "applied", "harvested" and "tillage" operations.'),Object(r.b)("h3",{id:"get-the-operations-standardgeojson"},"Get the operation's standardGeojson"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/standardGeojson")),Object(r.b)("p",null,"Get the standardGeojson file URL relative to the operation."),Object(r.b)("h4",{id:"request-examples-3"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/standardGeojson'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/standardGeojson'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/standardGeojson'\n")))),Object(r.b)("h4",{id:"response-3"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "standardGeojson": "URL",\n  "downloadStandardGeojson": "URL"\n}\n')),Object(r.b)("h3",{id:"get-the-operations-standardgeoparquet"},"Get the operation's standardGeoparquet"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/standardGeoparquet")),Object(r.b)("p",null,"Get the standard GeoParquet file URL relative to the operation."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"To use this option, ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview/#enableGeoparquetOutput"}),"enableGeoparquetOutput")," configuration must be enabled."))),Object(r.b)("h4",{id:"request-examples-4"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/standardGeoparquet'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/standardGeoparquet'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/standardGeoparquet'\n")))),Object(r.b)("h4",{id:"response-4"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "downloadStandardGeoparquet": "URL"\n}\n')),Object(r.b)("h3",{id:"get-the-operations-filteredgeojson"},"Get the operation's filteredGeojson"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/filteredGeojson")),Object(r.b)("p",null,"Get the filteredGeojson file URL relative to the operation."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"To use this option, the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview/#operationsfilteredgeojson"}),"operationsFilteredGeojson")," configuration must be enabled."))),Object(r.b)("h4",{id:"request-examples-5"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeojson'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeojson'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeojson'\n")))),Object(r.b)("h4",{id:"response-5"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "filteredGeojson": "URL",\n  "downloadFilteredGeojson": "URL"\n}\n')),Object(r.b)("h3",{id:"get-the-operations-filteredgeoparquet"},"Get the operation's filteredGeoparquet"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/filteredGeoparquet")),Object(r.b)("p",null,"Get the filtered GeoParquet file URL relative to the operation."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"To use this option, the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview/#operationsfilteredgeojson"}),"operationsFilteredGeojson")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview/#enableGeoparquetOutput"}),"enableGeoparquetOutput")," configuration must be enabled."))),Object(r.b)("h4",{id:"request-examples-6"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeoparquet'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeoparquet'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/filteredGeoparquet'\n")))),Object(r.b)("h4",{id:"response-6"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "downloadFilteredGeoparquet": "URL"\n}\n')),Object(r.b)("h3",{id:"get-operations-images"},"Get operation's images"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/images")),Object(r.b)("p",null,"Gets a list of PNG images generated from the operation's properties."),Object(r.b)("h4",{id:"request-examples-7"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/images'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/images'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/images'\n")))),Object(r.b)("h4",{id:"response-7"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "property": "elevation",\n    "ramp": {\n      "0%":   [200,   0, 0],\n      "35%":  [255,  40, 0],\n      "45%":  [255, 150, 0],\n      "55%":  [255, 240, 0],\n      "65%":  [  0, 230, 0],\n      "75%":  [  0, 190, 0],\n      "100%": [  0, 130, 0],\n      "nv":   [  0,   0, 0, 0]\n    },\n    "url": "URL",\n    "downloadUrl": "URL"\n  },\n  ....\n]\n')),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"property")," refers to the property extracted from operations' data to generate the\nimage. In the example above, the image would represent the elevation."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"ramp")," is the color ramp used to generate the image. The percentages\ncorrespond to the minimum (0%) and maximum (100%) values in the image. The\nlisted values correspond to RGB values used. The ",Object(r.b)("inlineCode",{parentName:"p"},"nv")," refers to ",Object(r.b)("inlineCode",{parentName:"p"},"no value"),". It\nis used internally to make the image transparent on places without data.\nCurrently, this ramp is the same in all images processed."),Object(r.b)("p",null,"We also generate an auxiliary ",Object(r.b)("inlineCode",{parentName:"p"},"xml")," with geographic information to handle this\nimage on GIS environments. You just need to append the ",Object(r.b)("inlineCode",{parentName:"p"},'".aux.xml"')," string to the png url."),Object(r.b)("h3",{id:"get-operations-images-v2"},"Get operation's images V2"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/imagesV2")),Object(r.b)("p",null,"Gets a list of PNG images generated from the operation's properties with improvements in the generation process. These images are based on the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-filtered-geojson"}),"filteredGeojson"),"."),Object(r.b)("h4",{id:"request-examples-8"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/imagesV2'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/imagesV2'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/imagesV2'\n")))),Object(r.b)("h4",{id:"response-8"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "property": "string",\n    "legend": {\n      "ranges": [\n        {\n          "colorCode": "#C80000",\n          "max": 20,\n          "min": 0\n        },\n        {\n          "colorCode": "#FF2800",\n          "max": 50,\n          "min": 20\n        },\n        {\n          "colorCode": "#FF9600",\n          "max": 100,\n          "min": 50\n        },\n        {\n          "colorCode": "#FFF000",\n          "max": 250,\n          "min": 100\n        },\n        {\n          "colorCode": "#00E600",\n          "max": 340,\n          "min": 250\n        },\n        {\n          "colorCode": "#00BE00",\n          "max": 480,\n          "min": 340\n        },\n        {\n          "colorCode": "#008200",\n          "max": 570,\n          "min": 480\n        }\n      ]\n    },\n    "extent": {\n      "xmin": 0,\n      "xmax": 0,\n      "ymin": 0,\n      "ymax": 0\n    },\n    "url": "URL",\n    "downloadUrl": "URL"\n  }\n]\n')),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"property")," refers to the property extracted from operations' data to generate the\nimage."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"legend")," represents the values distributed in 7 classes, classified by the quantile and symbolized by the standard color ramp."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"extent")," is the coordinates of the image, mainly used for plotting images in map applications."),Object(r.b)("p",null,"More information ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-images-v2"}),"here"),"."),Object(r.b)("h3",{id:"get-operations-geotiff-images"},"Get operation's geotiff images"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/geotiffImages")),Object(r.b)("p",null,"Gets a list of TIFF images generated from the operation's properties with improvements in the generation process. These images are based on the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-filtered-geojson"}),"filteredGeojson"),"."),Object(r.b)("h4",{id:"request-examples-9"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/geotiffImages'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/geotiffImages'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/geotiffImages'\n")))),Object(r.b)("h4",{id:"response-9"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "property": "distance",\n    "url": "URL",\n    "downloadUrl": "URL"\n  },\n  {\n    "property": "wetVolumePerArea",\n    "url": "URL",\n    "downloadUrl": "URL"\n  },\n  {\n    "property": "dryMassPerArea",\n    "url": "URL",\n    "downloadUrl": "URL"\n  },\n  {\n    "property": "dryVolumePerArea",\n    "url": "URL",\n    "downloadUrl": "URL"\n  }\n]\n')),Object(r.b)("h3",{id:"get-the-operations-units"},"Get the operation's units"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/units")),Object(r.b)("p",null,"Gets the operations's properties and their units."),Object(r.b)("h4",{id:"request-examples-10"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/units'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/units'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/units'\n")))),Object(r.b)("h4",{id:"response-10"},"Response"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output#field-operations-units"}),"Here's a link with sample responses"),' for "planted", "applied", "harvested" and "tillage" operations.'),Object(r.b)("p",null,"These properties vary depending on the operationType, but you can expect the same,\nstandardized keys, across different providers."),Object(r.b)("p",null,"Units usually don't change for the same Leaf User, since the providers units\nconfiguration is based on their location. But keep in mind that it's best to\nalways take the units into consideration, just to be sure."),Object(r.b)("h3",{id:"get-the-operations-machines"},"Get the operation's machines"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/machines")),Object(r.b)("p",null,"Gets the machines used in the given operation. The IDs returned can be used to fetch more information about the machine in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/beta_assets_endpoints#get-a-machine"}),"Get a machine endpoint"),"."),Object(r.b)("h4",{id:"request-examples-11"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/machines'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/machines'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/machines'\n")))),Object(r.b)("h4",{id:"response-11"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "machines": [\n        "77385069-7666-4867-8d72-72c2584e2b4e",\n        "baad537c-69e3-4d86-a99b-92d5b716b574"\n    ]\n}\n')),Object(r.b)("h3",{id:"get-the-operations-implements"},"Get the operation's implements"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/implements")),Object(r.b)("p",null,"Gets the implements used in the given operation. The IDs returned can be used to fetch more information about the implement in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/beta_assets_endpoints#get-an-implement"}),"Get an implement endpoint"),"."),Object(r.b)("h4",{id:"request-examples-12"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/implements'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/implements'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/implements'\n")))),Object(r.b)("h4",{id:"response-12"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "implements": [\n        "1190bc0d-e94c-407a-8aba-ac4c6a1cd29b"\n    ]\n}\n')),Object(r.b)("h3",{id:"get-the-operations-operators"},"Get the operation's operators"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/operators")),Object(r.b)("p",null,"Gets the operators that performed the given operation. The IDs returned can be used to fetch more information about the operator in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/beta_assets_endpoints#get-an-operator"}),"Get an operator endpoint"),"."),Object(r.b)("h4",{id:"request-examples-13"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/operators'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/operators'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/operators'\n")))),Object(r.b)("h4",{id:"response-13"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "operators": [\n        "f2f4723a-2bfe-472b-b6f7-7874c8500208"\n    ]\n}\n')),Object(r.b)("h3",{id:"get-the-operations-sessions"},"Get the operation's sessions"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/sessions")),Object(r.b)("p",null,"Get compiled machine, implement and operator data for a management view with total area covered and working hours."),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Important")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"It requires the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/configurations_overview/#enableOperationsSession"}),Object(r.b)("inlineCode",{parentName:"a"},"enableOperationsSession")," configuration")," enabled to create this data.\nCurrently, this information is only available for John Deere operations."))),Object(r.b)("h4",{id:"request-examples-14"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/sessions'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/sessions'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/sessions'\n")))),Object(r.b)("h4",{id:"response-14"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "machineId": "uuid",\n    "serialNumber": "SERIALNUMBER001",\n    "sessions": [\n      {\n        "id": "sessionId",\n        "startTime": "2023-11-29T11:03:42.000Z",\n        "endTime": "2023-11-29T20:58:36.000Z",\n        "operator": {\n          "id": "operatorId",\n          "name": "SIDINEY BATISTA"\n        },\n        "area": {\n          "value": 18.215,\n          "unit": "ha"\n        }\n      }\n    ]\n  },\n  {\n    "machineId": "uuid",\n    "serialNumber": "SERIALNUMBER002",\n    "sessions": [\n      {\n        "id": "sessionId",\n        "startTime": "2010-10-10T10:10:10.000000000Z",\n        "endTime": "2010-10-10T10:10:10.000000000Z",\n        "operator": {\n          "id": "uuid",\n          "name": "Operator A"\n        },\n        "area": {\n          "value": 26.019,\n          "unit": "ha"\n        }\n      }\n    ]\n  },\n  {\n    "machineId": "machineId",\n    "serialNumber": "1RW9640DKNA075787",\n    "sessions": [\n      {\n        "id": "sessionId",\n        "startTime": "2010-10-10T10:10:10.000000000Z",\n        "endTime": "2010-10-10T10:10:10.000000000Z",\n        "operator": {\n          "id": "uuid",\n          "name": "Operator A"\n        },\n        "implement": {\n          "id": "uuid",\n          "name": "Implement 1"\n        },\n        "area": {\n          "value": 39.410,\n          "unit": "ha"\n        }\n      }\n    ]\n  }\n]\n')),Object(r.b)("h3",{id:"crop-operation-by-field"},"Crop operation by field"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--warning"},"POST"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/cropOperationByField")),Object(r.b)("p",null,"This endpoint can be used to remove points from the operation standardGeojson that are outside of the field geometry."),Object(r.b)("h4",{id:"request-examples-15"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/cropOperationByField'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\nconst data = { 'id': 'operationId' }\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/cropOperationByField'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {'id': 'operationId'}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ \"id\": \"operationId\"}' \\\n    'https://api.withleaf.io/services/operations/api/operations/cropOperationByField'\n")))),Object(r.b)("h4",{id:"response-15"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "1162a1c6-9872-4d7f-9833-5d48add8eed4",\n    "message": "Sent operation to be processed.",\n    "leafFileId": "33020f03-5889-4c0f-b465-7a7e2c03a91d"\n}\n')),Object(r.b)("p",null,"You could monitor the processing status using the ",Object(r.b)("inlineCode",{parentName:"p"},"leafFileId")," by our ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/alerts_overview/"}),"Alerts Service"),"."),Object(r.b)("h3",{id:"get-files-from-an-operation"},"Get files from an operation"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/files")),Object(r.b)("p",null,"Allow the user to fetch all files resources that were aggregated to generate an Field Operation."),Object(r.b)("h4",{id:"request-examples-16"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/files'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/files'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/files'\n")))),Object(r.b)("h4",{id:"response-16"},"Response"),Object(r.b)("p",null,"Check our ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"files_sample"}),"sample response")," to have complete represention on the expected output."),Object(r.b)("h3",{id:"reprocess-an-operation"},"Reprocess an operation"),Object(r.b)("p",null,"\xa0",Object(r.b)("span",{class:"badge badge--warning"},"POST"),"  ",Object(r.b)("inlineCode",{parentName:"p"},"/operations/{id}/reprocess")),Object(r.b)("p",null,"Allows reprocessing an operation already created, starting from the merge step. The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-standard-geojson"}),"standardGeoJSON"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-filtered-geojson"}),"filteredGeoJSON"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-summary"}),"summary")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/operations_sample_output/#field-operations-images"}),"images")," will be updated."),Object(r.b)("h4",{id:"request-examples-17"},"Request examples"),Object(r.b)(o.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/operations/{id}/reprocess'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.post(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(r.b)(i.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/operations/{id}/reprocess'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.post(endpoint, headers=headers)\nprint(response.json())\n"))),Object(r.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/operations/{id}/reprocess'\n")))),Object(r.b)("p",null,"You could monitor the processing status by our ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/alerts_overview/"}),"Alerts Service"),"."),Object(r.b)("h2",{id:"alerts"},"Alerts"),Object(r.b)("p",null,"With Alerts you can be notified when something happens or changes instead of needing to repeatedly query for changes.\nLeaf Alerts support events that happen within Leaf and events that happen within supported 3rd party software. "),Object(r.b)("h3",{id:"list-of-operations-events"},"List of Operations Events"),Object(r.b)("p",null,"Leaf Operations Service can Alert you on these events: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/alerts_events/#operation-events"}),"list of Operations Events")))}d.isMDXComponent=!0},158:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return O}));var n=a(0),s=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var b=s.a.createContext({}),c=function(e){var t=s.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=c(e.components);return s.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),l=c(a),u=n,O=l["".concat(o,".").concat(u)]||l[u]||d[u]||r;return a?s.a.createElement(O,i(i({ref:t},b),{},{components:a})):s.a.createElement(O,i({ref:t},b))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var b=2;b<r;b++)o[b]=a[b];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},159:function(e,t,a){"use strict";var n=a(0),s=a(20);t.a=function(){var e=Object(n.useContext)(s.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},160:function(e,t,a){"use strict";function n(e){var t,a,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(s&&(s+=" "),s+=a);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}t.a=function(){for(var e,t,a=0,s="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(s&&(s+=" "),s+=t);return s}},161:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return o}));var n=a(159),s=a(162);function r(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var r=void 0===n?{}:n,o=r.forcePrependBaseUrl,i=void 0!==o&&o,p=r.absolute,b=void 0!==p&&p;if(!a)return a;if(a.startsWith("#"))return a;if(Object(s.b)(a))return a;if(i)return t+a;var c=!a.startsWith(t)?t+a.replace(/^\//,""):a;return b?e+c:c}(r,a,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},162:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function s(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return s}))},163:function(e,t,a){"use strict";var n=a(0),s=Object(n.createContext)(void 0);t.a=s},164:function(e,t,a){"use strict";var n=a(0),s=a(163);t.a=function(){var e=Object(n.useContext)(s.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},165:function(e,t,a){"use strict";var n=a(0),s=a.n(n),r=a(164),o=a(160),i=a(48),p=a.n(i),b=37,c=39;t.a=function(e){var t=e.block,a=e.children,i=e.defaultValue,l=e.values,d=e.groupId,u=Object(r.a)(),O=u.tabGroupChoices,m=u.setTabGroupChoices,j=Object(n.useState)(i),h=j[0],g=j[1],N=Object(n.useState)(!1),f=N[0],v=N[1];if(null!=d){var T=O[d];null!=T&&T!==h&&l.some((function(e){return e.value===T}))&&g(T)}var y=function(e){g(e),null!=d&&m(d,e)},x=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},w=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",w)}),[]),s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":t})},l.map((function(e){var t=e.value,a=e.label;return s.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(o.a)("tabs__item",p.a.tabItem,{"tabs__item--active":h===t}),style:f?{}:{outline:"none"},key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case c:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e),E(e)},onFocus:function(){return y(t)},onClick:function(){y(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),s.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},166:function(e,t,a){"use strict";var n=a(0),s=a.n(n);t.a=function(e){return s.a.createElement("div",null,e.children)}}}]);