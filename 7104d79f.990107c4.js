(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{103:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),b=(a(0),a(158)),l=a(165),c=a(166),i=(a(161),{title:"Manual File Upload Endpoints",description:"Manual File Upload - Endpoints",sidebar_label:"Endpoints"}),s={unversionedId:"converters_endpoints",id:"converters_endpoints",isDocsHomePage:!1,title:"Manual File Upload Endpoints",description:"Manual File Upload - Endpoints",source:"@site/docs/converters_endpoints.md",permalink:"/docs/docs/converters_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/converters_endpoints.md",sidebar_label:"Endpoints",sidebar:"docs",previous:{title:"Manual File Upload Overview",permalink:"/docs/docs/converters_overview"},next:{title:"Machine File Conversion Overview",permalink:"/docs/docs/machine_file_conversion_overview"}},o=[{value:"About",id:"about",children:[{value:"Upload a file",id:"upload-a-file",children:[]},{value:"Get Batch upload",id:"get-batch-upload",children:[]},{value:"Get all Batches",id:"get-all-batches",children:[]},{value:"Retry a batch",id:"retry-a-batch",children:[]},{value:"Batch Files Status",id:"batch-files-status",children:[]}]}],p={rightToc:o};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"about"},"About"),Object(b.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/operations/api\n")),Object(b.b)("p",null,"This service has the following endpoints available:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-a-file"}),"Upload a file")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-batch-upload"}),"Get a batch")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch/{id}"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-batches"}),"Get all batches")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#retry-a-batch"}),"Retry a batch")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--warning"},"PUT")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch/{id}/retry"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#batch-files-status"}),"Get Batch Files Status")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch/{id}/status"))))),Object(b.b)("p",null,"To easily test these endpoints, we recommend using our Postman ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"collection"),"."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"requires Leaf User")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"You will need a Leaf User to manually upload files. If you don't have a Leaf User, see the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/user_management_overview"}),"Leaf user overview")))),Object(b.b)("h3",{id:"upload-a-file"},"Upload a file"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch")),Object(b.b)("p",null,"Creates a new file in Leaf. The file must be sent as a zip."),Object(b.b)("p",null,"This endpoint accepts a .zip of operation files, detects which files are in the\n.zip, and returns the ID of the process, which can in turn be used to retrieve\nthe ID's of the files being processed."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"File size limit of 3 GB")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"Currently, our upload endpoints accepts files with the maximum size limited to 3 gigabytes."))),Object(b.b)("p",null,"This endpoint receives two required URL parameters, a ",Object(b.b)("inlineCode",{parentName:"p"},"leafUserId")," and ",Object(b.b)("inlineCode",{parentName:"p"},"provider")," "),Object(b.b)("p",null,"A ",Object(b.b)("inlineCode",{parentName:"p"},"provider")," can be set as one of the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"Other\nLeaf\nClimateFieldView\nCNHI\nJohnDeere\nTrimble\nAgLeader\nFarmobile\nPrecisionPlanting\n")),Object(b.b)("p",null,'If provider is set to "Other", Leaf will detect which files are\npresent in the .zip file and process them accordingly.'),Object(b.b)("p",null,"Leaf will detect files present in the uploaded .zip and create file ids for the files that are detected in the uploaded .zip. These  files can then be accessed individually by their file ID, batch ID, or their associated field boundary."),Object(b.b)("p",null,"Expected file structures from each provider are listed below. Very often these default file structures are edited by users. In these cases Leaf attempts to automatically repair the file structure and find all necessary files within any uploaded .zip."),Object(b.b)("p",null,"The following file formats from each provider are supported:"),Object(b.b)("h4",{id:"johndeere"},"JohnDeere"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GS3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GreenStar 3 \u2013 2630"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/GS3_2630/profile/RCD/EIC/global.ver"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gen4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gen 4 - 4600/4630"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/JD-Data/log/user defined name/*.jdl"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Exported from MyJohnDeere"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile with extra metadata in a ",Object(b.b)("inlineCode",{parentName:"td"},".json")," file")))),Object(b.b)("h5",{id:"expected-file-structure"},"Expected file structure"),Object(b.b)("p",null,"GreenStar 4 (4600+) "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"jd-data\n\u2514\u2500\u2500 log\n   \u2514\u2500\u2500 *.jdl\n")),Object(b.b)("p",null,"GreenStar 3 (2630) "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"GS3_2630\n\u2514\u2500\u2500 RCD\n   \u2514\u2500\u2500 EIC\n      \u2514\u2500\u2500 global.ver\n        \u2514\u2500\u2500 documentation\n              \u2514\u2500\u2500 ...\n                 \u251c\u2500\u2500 *.fdd\n                 \u2514\u2500\u2500 *.fdl\n")),Object(b.b)("p",null,"Green Star 2 (2600)  "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u2514\u2500\u2500 RCD\n   \u251c\u2500\u2500 *.fdd\n   \u2514\u2500\u2500 *.fdl\n")),Object(b.b)("h4",{id:"climate-fieldview"},"Climate FieldView"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dat"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"All files from Climate FieldView"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".dat")," files")))),Object(b.b)("h5",{id:"expected-file-structure-1"},"Expected file structure"),Object(b.b)("p",null,"20|20 SeedSense Generation 1 and Generation 2"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u251c\u2500\u2500 harvest_*.dat \u2013 Harvest data\n\u251c\u2500\u2500 field_map_*.dat \u2013 Planting data\n\u2514\u2500\u2500 liquid_map_*.dat - AsApplied spraying data\n")),Object(b.b)("p",null,"20|20 SeedSense Generation 3"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u2514\u2500\u2500 *.2020\n")),Object(b.b)("h4",{id:"cnhi"},"CNHI"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"CN1"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Case IH Pro 700, equivalent to New Holland IntelliView IV"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/file.cn1/index.vy1"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISOXML"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Case IH Pro 1200, equivalent to New Holland IntelliView 12"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/TASKDATA.XML"))))),Object(b.b)("h5",{id:"expected-file-structure-2"},"Expected file structure"),Object(b.b)("p",null,"Voyager 2"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"*.cn1\n\u2514\u2500\u2500 ...\n   \u2514\u2500\u2500 *.vy1\n")),Object(b.b)("p",null,"ISOXML"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 TASKDATA.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"agleader"},"AgLeader"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yld"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"YM2000, PFAdvantage & other OEM systems"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".yld")," files")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ilf"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"INTEGRA / Insight / Edge"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".ilf")," files")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"agdata"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"INTEGRA / VERSA / COMPASS"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".agdata")," files")))),Object(b.b)("h5",{id:"expected-file-structure-3"},"Expected file structure"),Object(b.b)("p",null,"AgLeader Integra (versions 3.5+), Versa"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u251c\u2500\u2500 *.agdata\n\u2514\u2500\u2500 *.agsetup\n")),Object(b.b)("p",null,"AgLeader Edge, Insight, and Integra (version 3.4)"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u2514\u2500\u2500 *.ilf\n")),Object(b.b)("p",null,"AgLeader PF Advantage, PF 3000, PF 3000 Pro, YM2000 "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u2514\u2500\u2500 *.yld\n")),Object(b.b)("h4",{id:"trimble"},"Trimble"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AgData"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FMX and CFX monitors"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/AgData/"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AgGPS"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"TMX and GFX monitors"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/AgGPS/"))))),Object(b.b)("h5",{id:"expected-file-structure-4"},"Expected file structure"),Object(b.b)("p",null,"GFX-750, TMX-2050 "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Agdata\n\u251c\u2500\u2500 Fields\n   \u2514\u2500\u2500 *.agf\n\u251c\u2500\u2500 implements\n   \u2514\u2500\u2500 *.agi\n\u251c\u2500\u2500 prescriptions\n   \u2514\u2500\u2500 *.agm\n\u251c\u2500\u2500 Tasks\n   \u2514\u2500\u2500 *.agt\n\u251c\u2500\u2500 Users\n   \u2514\u2500\u2500 *.agu\n\u2514\u2500\u2500 vehicles\n   \u2514\u2500\u2500 *.agv\n")),Object(b.b)("p",null,"CFX-750, FMX  "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'AgGPS\n\u2514\u2500\u2500 Data\n   \u2514\u2500\u2500 "Grower"\n      \u2514\u2500\u2500 Farm\n        \u2514\u2500\u2500 field\n          \u2514\u2500\u2500 "Task"\n            \u251c\u2500\u2500 *.cpg\n            \u251c\u2500\u2500 *.dbf\n            \u251c\u2500\u2500 *.shp\n            \u2514\u2500\u2500 *.shx\n')),Object(b.b)("h4",{id:"precision-planting-beta"},"Precision Planting (beta)"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PP2020"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20","|","20"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".2020")," files.")))),Object(b.b)("h5",{id:"expected-file-structure-5"},"Expected file structure"),Object(b.b)("p",null,"20|20 SeedSense Generation 1 and Generation 2"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u251c\u2500\u2500 harvest_*.dat \u2013 Harvest data\n\u251c\u2500\u2500 field_map_*.dat \u2013 Planting data\n\u2514\u2500\u2500 liquid_map_*.dat - AsApplied spraying data\n")),Object(b.b)("p",null,"20|20 SeedSense Generation 3"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"...\n\u2514\u2500\u2500 *.2020\n")),Object(b.b)("h4",{id:"isoxml"},"ISOXML"),Object(b.b)("h5",{id:"expected-file-structure-6"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"claas"},"CLAAS"),Object(b.b)("h5",{id:"expected-file-structure-7"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"kuhn"},"Kuhn"),Object(b.b)("h5",{id:"expected-file-structure-8"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"kverneland-group"},"Kverneland Group"),Object(b.b)("h5",{id:"expected-file-structure-9"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"m\xfcller-elektronik"},"M\xfcller-Elektronik"),Object(b.b)("h5",{id:"expected-file-structure-10"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"teknomika"},"Teknomika"),Object(b.b)("h5",{id:"expected-file-structure-11"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"topcon-precision-agriculture"},"Topcon Precision Agriculture"),Object(b.b)("h5",{id:"expected-file-structure-12"},"Expected file structure"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"TASKDATA\n\u251c\u2500\u2500 *.XML\n\u2514\u2500\u2500 *.bin\n")),Object(b.b)("h4",{id:"farmobile"},"Farmobile"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GeoJSON"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GeoJSON files exported from Farmobile. Since GeoJSON files do not contain information on the units used, we assume the default units from Farmobile are being used.")))),Object(b.b)("h4",{id:"other"},"Other"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefiles exported from SMS, Raven Slingshot, and Topcon. Since Shapefiles do not contain information on the units used, we assume the default units from the provider will be used.")))),Object(b.b)("h4",{id:"request-examples"},"Request examples"),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/batch'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst params = {\n  provider: 'JohnDeere',\n  leafUserId: 'id'\n}\n\nconst form = new FormData()\nform.append('file', 'shapefile.zip')\n\naxios.post(endpoint, form, { headers, params })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(c.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('shapefile.zip', 'rb')}\nparams = {\n  'provider': 'JohnDeere',\n  'leafUserId': 'id'\n}\n\nresponse = requests.post(endpoint, headers=headers, files=files, params=params)\nprint(response.json())\n"))),Object(b.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=shapefile.zip' \\\n    'https://api.withleaf.io/services/operations/api/batch' \\\n    'provider=JohnDeere&leafUserId=id'\n")))),Object(b.b)("h4",{id:"response"},"Response"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "996aea67-52bc-4d4b-9b77-028756dc0ee9",\n    "leafUserId": "ede8f781-1d55-4b2d-83a1-6785ddab6e1d",\n    "fileName": "Climate.zip",\n    "size": 8652951,\n    "provider": "Other",\n    "status": "RECEIVED",\n    "uploadTimestamp": "2021-03-12T19:50:55.567755Z"\n}\n')),Object(b.b)("p",null,"This id can then be queried to retrieve on ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-batch-upload"}),"Get batch")," to get the individual file ID's.\nThen you can query each of the files individually with\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_endpoints#get-a-file"}),"Get a File")," or all of them, filtering by ",Object(b.b)("inlineCode",{parentName:"p"},"batchId"),", on\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_endpoints#get-all-files"}),"Get all Files"),"."),Object(b.b)("h4",{id:"batch-status"},"Batch status"),Object(b.b)("p",null,"The ",Object(b.b)("em",{parentName:"p"},"status")," key will evolve accordingly to the following states:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RECEIVED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the default state for every batch created")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROCESSED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When all the files included in the batch were processed, and at least one file have status SUCCESS")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FAILED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The batch did not generated any leaf files with status SUCCESS")))),Object(b.b)("p",null,"The messages with FAILED status have the key ",Object(b.b)("em",{parentName:"p"},"statusDetails"),". The `statusDetails`` is just informative and should not be used programatically."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "c21e6495-3e39-4c5f-b35c-d33fa06c25d8",\n    "leafUserId": "fc7c52ad-d228-4332-9e18-de979a293457",\n    "fileName": "Climate.zip",\n    "size": 8652951,\n    "provider": "Other",\n    "status": "FAILED",\n    "statusDetails": "No operation found. Check file format before re-trying or contact support. Check file format before re-trying or contact support", \n    "uploadTimestamp": "2021-03-12T19:50:55.567755Z"\n}\n')),Object(b.b)("p",null,"The following status can be present on ",Object(b.b)("em",{parentName:"p"},"statusDetails"),":"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"No valid files found"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Unable to find a valid file based on supported extensions and expected file structure")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Leaf internal error. Please contact Support"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Internal error that need to be reported")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Files found but unable to read. Please check file format before re-trying or contact Support"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A valid file was found but could not be converted")))),Object(b.b)("h3",{id:"get-batch-upload"},"Get Batch upload"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch/{batch_id}")),Object(b.b)("p",null,"Once you've uploaded files, you can then query these files individually, merge the files, or query for them\nvia ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_endpoints#get-all-files"}),"Get all Files"),".\nYou can also query the batch upload ID to see a list of files generated in the upload and a status of the upload with this endpoint."),Object(b.b)("h4",{id:"request-examples-1"},"Request examples"),Object(b.b)(l.a,{defaultValue:"py",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/operations/api/batch/{batch_id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(c.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch/{batch_id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/batch/{batch_id}'\n")))),Object(b.b)("h4",{id:"response-1"},"Response"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "9b561906-efac-43a3-9378-641e3698da5d",\n  "leafUserId": "1481bc9b-cdc7-45c1-9f0e-592da6306dfe",\n  "provider": "Other",\n  "status": "PROCESSED",\n  "leafFiles": [\n    "f14203df-4144-43b7-a383-2ed321f395ce",\n    "810b1475-cb49-437b-8658-d29038ce2fa4"\n  ]\n}\n')),Object(b.b)("h3",{id:"get-all-batches"},"Get all Batches"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch")),Object(b.b)("p",null,"Once you've uploaded files, you can then query these files individually, merge the files, or query for them\nvia ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_endpoints#get-all-files"}),"Get all Files"),".\nYou can also query the batch upload ID to see a list of files generated in the upload and a status of the upload with this endpoint."),Object(b.b)("h4",{id:"request-examples-2"},"Request examples"),Object(b.b)(l.a,{defaultValue:"py",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/operations/api/batch'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.put(endpoint, data, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(c.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.put(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X PUT \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/batch'\n")))),Object(b.b)("h4",{id:"response-2"},"Response"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "9e47ae29-6a84-4a9c-9e5f-01802f6dceea",\n    "leafUserId": "5ded9409-c99f-4379-9173-c01b1631f274",\n    "provider": "Other",\n    "status": "PROCESSED",\n    "leafFiles": [\n      "74d5aeb6-9a0e-43c6-986c-a5f17eecbddc",\n      "475fcad3-b534-409d-8c8b-cec4dabd1b8b"\n    ]\n  }\n]\n')),Object(b.b)("h3",{id:"retry-a-batch"},"Retry a batch"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--warning"},"PUT")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch/{id}/retry")),Object(b.b)("p",null,"If a batch upload does not complete as expected, this endpoint allows you to try again. This action will reprocess the fragments of uploaded data that didn't succeed processing before, keeping existing converted files unaffected."),Object(b.b)("h4",{id:"request-examples-3"},"Request examples"),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/operations/api/batch/{id}/retry'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.put(endpoint, data, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(c.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch/{id}/retry'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.put(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X PUT \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/batch/{id}/retry'\n")))),Object(b.b)("h4",{id:"response-3"},"Response"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "36d8551f-409d-41f2-94b4-04c9fe16289b",\n    "leafUserId": "089bb77b-2415-43df-a246-6c0a5937c774",\n    "fileName": "filename.zip",\n    "size": 8652951,\n    "provider": "Other",\n    "status": "RECEIVED",\n    "uploadTimestamp": "2021-03-12T19:50:55.567755Z"\n}\n')),Object(b.b)("h3",{id:"batch-files-status"},"Batch Files Status"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch/{id}/status")),Object(b.b)("p",null,"After your batch generate the list of Leaf Files, this enpoint can be used to verify the status of each resource complied on the same response."),Object(b.b)("h4",{id:"request-examples-4"},"Request examples"),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/operations/api/batch/{id}/status'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .catch(console.error)\n"))),Object(b.b)(c.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch/{id}/status'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/batch/{id}/status'\n")))),Object(b.b)("h4",{id:"response-4"},"Response"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "converted": {\n    "leafFiles": [\n      "06512392-8d69-4033-8127-4cc62b7176b9",\n      "075fd0f6-af1a-433d-ad7a-e3e979179244"\n    ]\n  },\n  "processing": {\n    "leafFiles": [\n      "9d22cbca-03ff-47e8-ac66-f6d463d206f4"\n    ]\n  },\n  "failed": {\n    "standardGeojson": {\n      "leafFiles": [\n        "0abca517-09f2-4d1d-9627-9cd3147e9ec3"\n      ],\n      "status": "failed",\n      "message": "no points passed the filter"\n    }\n  }\n}\n')),Object(b.b)("p",null,"The most common failed messages are listed ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/machine_file_conversion_endpoints#troubleshooting"}),"here"),"."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Please note")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"Once you have finished setting up manual file upload, refer to ",Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"strong"},{href:"https://docs.withleaf.io/docs/machine_file_conversion_overview"}),"machine file conversion")),"\nnext"))))}d.isMDXComponent=!0},158:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=o(a),u=n,O=p["".concat(l,".").concat(u)]||p[u]||d[u]||b;return a?r.a.createElement(O,c(c({ref:t},s),{},{components:a})):r.a.createElement(O,c({ref:t},s))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var s=2;s<b;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},159:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},160:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},161:function(e,t,a){"use strict";a.d(t,"b",(function(){return b})),a.d(t,"a",(function(){return l}));var n=a(159),r=a(162);function b(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,b=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var b=void 0===n?{}:n,l=b.forcePrependBaseUrl,c=void 0!==l&&l,i=b.absolute,s=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(c)return t+a;var o=!a.startsWith(t)?t+a.replace(/^\//,""):a;return s?e+o:o}(b,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,b().withBaseUrl)(e,t)}},162:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},163:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},164:function(e,t,a){"use strict";var n=a(0),r=a(163);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},165:function(e,t,a){"use strict";var n=a(0),r=a.n(n),b=a(164),l=a(160),c=a(48),i=a.n(c),s=37,o=39;t.a=function(e){var t=e.block,a=e.children,c=e.defaultValue,p=e.values,d=e.groupId,u=Object(b.a)(),O=u.tabGroupChoices,j=u.setTabGroupChoices,m=Object(n.useState)(c),h=m[0],f=m[1],N=Object(n.useState)(!1),g=N[0],v=N[1];if(null!=d){var y=O[d];null!=y&&y!==h&&p.some((function(e){return e.value===y}))&&f(y)}var T=function(e){f(e),null!=d&&j(d,e)},w=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},x=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",x)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(l.a)("tabs__item",i.a.tabItem,{"tabs__item--active":h===t}),style:g?{}:{outline:"none"},key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case o:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e),E(e)},onFocus:function(){return T(t)},onClick:function(){T(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},166:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);